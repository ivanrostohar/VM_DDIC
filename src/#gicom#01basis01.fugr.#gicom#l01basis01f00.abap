*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: /GICOM/VMFOLDERT................................*
FORM GET_DATA_/GICOM/VMFOLDERT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TFOLDERT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMFOLDERT .
/GICOM/VMFOLDERT-CLNT =
/GICOM/TFOLDERT-CLNT .
/GICOM/VMFOLDERT-SPRAS =
/GICOM/TFOLDERT-SPRAS .
/GICOM/VMFOLDERT-FOLDER =
/GICOM/TFOLDERT-FOLDER .
/GICOM/VMFOLDERT-DESCR =
/GICOM/TFOLDERT-DESCR .
<VIM_TOTAL_STRUC> = /GICOM/VMFOLDERT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMFOLDERT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMFOLDERT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMFOLDERT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TFOLDERT WHERE
  SPRAS = /GICOM/VMFOLDERT-SPRAS AND
  FOLDER = /GICOM/VMFOLDERT-FOLDER .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TFOLDERT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TFOLDERT WHERE
  SPRAS = /GICOM/VMFOLDERT-SPRAS AND
  FOLDER = /GICOM/VMFOLDERT-FOLDER .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TFOLDERT.
    ENDIF.
/GICOM/TFOLDERT-CLNT =
/GICOM/VMFOLDERT-CLNT .
/GICOM/TFOLDERT-SPRAS =
/GICOM/VMFOLDERT-SPRAS .
/GICOM/TFOLDERT-FOLDER =
/GICOM/VMFOLDERT-FOLDER .
/GICOM/TFOLDERT-DESCR =
/GICOM/VMFOLDERT-DESCR .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TFOLDERT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TFOLDERT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMFOLDERT-UPD_FLAG,
STATUS_/GICOM/VMFOLDERT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMFOLDERT.
  SELECT SINGLE * FROM /GICOM/TFOLDERT WHERE
SPRAS = /GICOM/VMFOLDERT-SPRAS AND
FOLDER = /GICOM/VMFOLDERT-FOLDER .
/GICOM/VMFOLDERT-CLNT =
/GICOM/TFOLDERT-CLNT .
/GICOM/VMFOLDERT-SPRAS =
/GICOM/TFOLDERT-SPRAS .
/GICOM/VMFOLDERT-FOLDER =
/GICOM/TFOLDERT-FOLDER .
/GICOM/VMFOLDERT-DESCR =
/GICOM/TFOLDERT-DESCR .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMFOLDERT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMFOLDERT-SPRAS TO
/GICOM/TFOLDERT-SPRAS .
MOVE /GICOM/VMFOLDERT-FOLDER TO
/GICOM/TFOLDERT-FOLDER .
MOVE /GICOM/VMFOLDERT-CLNT TO
/GICOM/TFOLDERT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TFOLDERT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TFOLDERT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TFOLDERT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMLVLPROT................................*
FORM GET_DATA_/GICOM/VMLVLPROT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TLVL_PROT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMLVLPROT .
/GICOM/VMLVLPROT-CLNT =
/GICOM/TLVL_PROT-CLNT .
/GICOM/VMLVLPROT-LVL_PROCESS =
/GICOM/TLVL_PROT-LVL_PROCESS .
/GICOM/VMLVLPROT-SPRAS =
/GICOM/TLVL_PROT-SPRAS .
/GICOM/VMLVLPROT-LVL_PROCESS_TXT =
/GICOM/TLVL_PROT-LVL_PROCESS_TXT .
<VIM_TOTAL_STRUC> = /GICOM/VMLVLPROT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMLVLPROT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMLVLPROT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMLVLPROT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TLVL_PROT WHERE
  LVL_PROCESS = /GICOM/VMLVLPROT-LVL_PROCESS AND
  SPRAS = /GICOM/VMLVLPROT-SPRAS .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TLVL_PROT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TLVL_PROT WHERE
  LVL_PROCESS = /GICOM/VMLVLPROT-LVL_PROCESS AND
  SPRAS = /GICOM/VMLVLPROT-SPRAS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TLVL_PROT.
    ENDIF.
/GICOM/TLVL_PROT-CLNT =
/GICOM/VMLVLPROT-CLNT .
/GICOM/TLVL_PROT-LVL_PROCESS =
/GICOM/VMLVLPROT-LVL_PROCESS .
/GICOM/TLVL_PROT-SPRAS =
/GICOM/VMLVLPROT-SPRAS .
/GICOM/TLVL_PROT-LVL_PROCESS_TXT =
/GICOM/VMLVLPROT-LVL_PROCESS_TXT .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TLVL_PROT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TLVL_PROT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMLVLPROT-UPD_FLAG,
STATUS_/GICOM/VMLVLPROT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMLVLPROT.
  SELECT SINGLE * FROM /GICOM/TLVL_PROT WHERE
LVL_PROCESS = /GICOM/VMLVLPROT-LVL_PROCESS AND
SPRAS = /GICOM/VMLVLPROT-SPRAS .
/GICOM/VMLVLPROT-CLNT =
/GICOM/TLVL_PROT-CLNT .
/GICOM/VMLVLPROT-LVL_PROCESS =
/GICOM/TLVL_PROT-LVL_PROCESS .
/GICOM/VMLVLPROT-SPRAS =
/GICOM/TLVL_PROT-SPRAS .
/GICOM/VMLVLPROT-LVL_PROCESS_TXT =
/GICOM/TLVL_PROT-LVL_PROCESS_TXT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMLVLPROT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMLVLPROT-LVL_PROCESS TO
/GICOM/TLVL_PROT-LVL_PROCESS .
MOVE /GICOM/VMLVLPROT-SPRAS TO
/GICOM/TLVL_PROT-SPRAS .
MOVE /GICOM/VMLVLPROT-CLNT TO
/GICOM/TLVL_PROT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TLVL_PROT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TLVL_PROT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TLVL_PROT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVANAP................................*
FORM GET_DATA_/GICOM/VMNAVANAP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVANCAP WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVANAP .
/GICOM/VMNAVANAP-CLNT =
/GICOM/TNAVANCAP-CLNT .
/GICOM/VMNAVANAP-ANCHOR =
/GICOM/TNAVANCAP-ANCHOR .
/GICOM/VMNAVANAP-APPL =
/GICOM/TNAVANCAP-APPL .
/GICOM/VMNAVANAP-SCREEN_KEY =
/GICOM/TNAVANCAP-SCREEN_KEY .
/GICOM/VMNAVANAP-PARAM =
/GICOM/TNAVANCAP-PARAM .
/GICOM/VMNAVANAP-X_MULTIPLE =
/GICOM/TNAVANCAP-X_MULTIPLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVANAP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVANAP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVANAP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVANAP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCAP WHERE
  APPL = /GICOM/VMNAVANAP-APPL AND
  SCREEN_KEY = /GICOM/VMNAVANAP-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVANAP-ANCHOR AND
  PARAM = /GICOM/VMNAVANAP-PARAM .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVANCAP .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCAP WHERE
  APPL = /GICOM/VMNAVANAP-APPL AND
  SCREEN_KEY = /GICOM/VMNAVANAP-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVANAP-ANCHOR AND
  PARAM = /GICOM/VMNAVANAP-PARAM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVANCAP.
    ENDIF.
/GICOM/TNAVANCAP-CLNT =
/GICOM/VMNAVANAP-CLNT .
/GICOM/TNAVANCAP-ANCHOR =
/GICOM/VMNAVANAP-ANCHOR .
/GICOM/TNAVANCAP-APPL =
/GICOM/VMNAVANAP-APPL .
/GICOM/TNAVANCAP-SCREEN_KEY =
/GICOM/VMNAVANAP-SCREEN_KEY .
/GICOM/TNAVANCAP-PARAM =
/GICOM/VMNAVANAP-PARAM .
/GICOM/TNAVANCAP-X_MULTIPLE =
/GICOM/VMNAVANAP-X_MULTIPLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVANCAP ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVANCAP .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVANAP-UPD_FLAG,
STATUS_/GICOM/VMNAVANAP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVANAP.
  SELECT SINGLE * FROM /GICOM/TNAVANCAP WHERE
APPL = /GICOM/VMNAVANAP-APPL AND
SCREEN_KEY = /GICOM/VMNAVANAP-SCREEN_KEY AND
ANCHOR = /GICOM/VMNAVANAP-ANCHOR AND
PARAM = /GICOM/VMNAVANAP-PARAM .
/GICOM/VMNAVANAP-CLNT =
/GICOM/TNAVANCAP-CLNT .
/GICOM/VMNAVANAP-ANCHOR =
/GICOM/TNAVANCAP-ANCHOR .
/GICOM/VMNAVANAP-APPL =
/GICOM/TNAVANCAP-APPL .
/GICOM/VMNAVANAP-SCREEN_KEY =
/GICOM/TNAVANCAP-SCREEN_KEY .
/GICOM/VMNAVANAP-PARAM =
/GICOM/TNAVANCAP-PARAM .
/GICOM/VMNAVANAP-X_MULTIPLE =
/GICOM/TNAVANCAP-X_MULTIPLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVANAP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVANAP-APPL TO
/GICOM/TNAVANCAP-APPL .
MOVE /GICOM/VMNAVANAP-SCREEN_KEY TO
/GICOM/TNAVANCAP-SCREEN_KEY .
MOVE /GICOM/VMNAVANAP-ANCHOR TO
/GICOM/TNAVANCAP-ANCHOR .
MOVE /GICOM/VMNAVANAP-PARAM TO
/GICOM/TNAVANCAP-PARAM .
MOVE /GICOM/VMNAVANAP-CLNT TO
/GICOM/TNAVANCAP-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVANCAP'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVANCAP TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVANCAP'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVANC.................................*
FORM GET_DATA_/GICOM/VMNAVANC.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVANC WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVANC .
/GICOM/VMNAVANC-CLNT =
/GICOM/TNAVANC-CLNT .
/GICOM/VMNAVANC-ANCHOR =
/GICOM/TNAVANC-ANCHOR .
/GICOM/VMNAVANC-TYPE =
/GICOM/TNAVANC-TYPE .
    SELECT SINGLE * FROM /GICOM/TNAVANCT WHERE
ANCHOR = /GICOM/TNAVANC-ANCHOR AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVANC-TITLE =
/GICOM/TNAVANCT-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VMNAVANC.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVANC .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVANC.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVANC-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANC WHERE
  ANCHOR = /GICOM/VMNAVANC-ANCHOR .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVANC .
    ENDIF.
    DELETE FROM /GICOM/TNAVANCT WHERE
    ANCHOR = /GICOM/TNAVANC-ANCHOR .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANC WHERE
  ANCHOR = /GICOM/VMNAVANC-ANCHOR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVANC.
    ENDIF.
/GICOM/TNAVANC-CLNT =
/GICOM/VMNAVANC-CLNT .
/GICOM/TNAVANC-ANCHOR =
/GICOM/VMNAVANC-ANCHOR .
/GICOM/TNAVANC-TYPE =
/GICOM/VMNAVANC-TYPE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVANC ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVANC .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCT WHERE
    ANCHOR = /GICOM/TNAVANC-ANCHOR AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TNAVANCT.
/GICOM/TNAVANCT-ANCHOR =
/GICOM/TNAVANC-ANCHOR .
/GICOM/TNAVANCT-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TNAVANCT-TITLE =
/GICOM/VMNAVANC-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVANCT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVANCT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVANC-UPD_FLAG,
STATUS_/GICOM/VMNAVANC-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVANC.
  SELECT SINGLE * FROM /GICOM/TNAVANC WHERE
ANCHOR = /GICOM/VMNAVANC-ANCHOR .
/GICOM/VMNAVANC-CLNT =
/GICOM/TNAVANC-CLNT .
/GICOM/VMNAVANC-ANCHOR =
/GICOM/TNAVANC-ANCHOR .
/GICOM/VMNAVANC-TYPE =
/GICOM/TNAVANC-TYPE .
    SELECT SINGLE * FROM /GICOM/TNAVANCT WHERE
ANCHOR = /GICOM/TNAVANC-ANCHOR AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVANC-TITLE =
/GICOM/TNAVANCT-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VMNAVANC-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVANC USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVANC-ANCHOR TO
/GICOM/TNAVANC-ANCHOR .
MOVE /GICOM/VMNAVANC-CLNT TO
/GICOM/TNAVANC-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVANC'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVANC TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVANC'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TNAVANC-ANCHOR TO
/GICOM/TNAVANCT-ANCHOR .
MOVE SY-LANGU TO
/GICOM/TNAVANCT-LANGU .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVANCA................................*
FORM GET_DATA_/GICOM/VMNAVANCA.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVANCA WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVANCA .
/GICOM/VMNAVANCA-CLNT =
/GICOM/TNAVANCA-CLNT .
/GICOM/VMNAVANCA-ANCHOR =
/GICOM/TNAVANCA-ANCHOR .
/GICOM/VMNAVANCA-APPL =
/GICOM/TNAVANCA-APPL .
/GICOM/VMNAVANCA-SCREEN_KEY =
/GICOM/TNAVANCA-SCREEN_KEY .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVANCA.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVANCA .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVANCA.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVANCA-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCA WHERE
  APPL = /GICOM/VMNAVANCA-APPL AND
  SCREEN_KEY = /GICOM/VMNAVANCA-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVANCA-ANCHOR .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVANCA .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCA WHERE
  APPL = /GICOM/VMNAVANCA-APPL AND
  SCREEN_KEY = /GICOM/VMNAVANCA-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVANCA-ANCHOR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVANCA.
    ENDIF.
/GICOM/TNAVANCA-CLNT =
/GICOM/VMNAVANCA-CLNT .
/GICOM/TNAVANCA-ANCHOR =
/GICOM/VMNAVANCA-ANCHOR .
/GICOM/TNAVANCA-APPL =
/GICOM/VMNAVANCA-APPL .
/GICOM/TNAVANCA-SCREEN_KEY =
/GICOM/VMNAVANCA-SCREEN_KEY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVANCA ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVANCA .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVANCA-UPD_FLAG,
STATUS_/GICOM/VMNAVANCA-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVANCA.
  SELECT SINGLE * FROM /GICOM/TNAVANCA WHERE
APPL = /GICOM/VMNAVANCA-APPL AND
SCREEN_KEY = /GICOM/VMNAVANCA-SCREEN_KEY AND
ANCHOR = /GICOM/VMNAVANCA-ANCHOR .
/GICOM/VMNAVANCA-CLNT =
/GICOM/TNAVANCA-CLNT .
/GICOM/VMNAVANCA-ANCHOR =
/GICOM/TNAVANCA-ANCHOR .
/GICOM/VMNAVANCA-APPL =
/GICOM/TNAVANCA-APPL .
/GICOM/VMNAVANCA-SCREEN_KEY =
/GICOM/TNAVANCA-SCREEN_KEY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVANCA USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVANCA-APPL TO
/GICOM/TNAVANCA-APPL .
MOVE /GICOM/VMNAVANCA-SCREEN_KEY TO
/GICOM/TNAVANCA-SCREEN_KEY .
MOVE /GICOM/VMNAVANCA-ANCHOR TO
/GICOM/TNAVANCA-ANCHOR .
MOVE /GICOM/VMNAVANCA-CLNT TO
/GICOM/TNAVANCA-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVANCA'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVANCA TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVANCA'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVANCT................................*
FORM GET_DATA_/GICOM/VMNAVANCT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVANCT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVANCT .
/GICOM/VMNAVANCT-CLNT =
/GICOM/TNAVANCT-CLNT .
/GICOM/VMNAVANCT-ANCHOR =
/GICOM/TNAVANCT-ANCHOR .
/GICOM/VMNAVANCT-LANGU =
/GICOM/TNAVANCT-LANGU .
/GICOM/VMNAVANCT-TITLE =
/GICOM/TNAVANCT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVANCT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVANCT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVANCT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVANCT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCT WHERE
  ANCHOR = /GICOM/VMNAVANCT-ANCHOR AND
  LANGU = /GICOM/VMNAVANCT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVANCT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVANCT WHERE
  ANCHOR = /GICOM/VMNAVANCT-ANCHOR AND
  LANGU = /GICOM/VMNAVANCT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVANCT.
    ENDIF.
/GICOM/TNAVANCT-CLNT =
/GICOM/VMNAVANCT-CLNT .
/GICOM/TNAVANCT-ANCHOR =
/GICOM/VMNAVANCT-ANCHOR .
/GICOM/TNAVANCT-LANGU =
/GICOM/VMNAVANCT-LANGU .
/GICOM/TNAVANCT-TITLE =
/GICOM/VMNAVANCT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVANCT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVANCT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVANCT-UPD_FLAG,
STATUS_/GICOM/VMNAVANCT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVANCT.
  SELECT SINGLE * FROM /GICOM/TNAVANCT WHERE
ANCHOR = /GICOM/VMNAVANCT-ANCHOR AND
LANGU = /GICOM/VMNAVANCT-LANGU .
/GICOM/VMNAVANCT-CLNT =
/GICOM/TNAVANCT-CLNT .
/GICOM/VMNAVANCT-ANCHOR =
/GICOM/TNAVANCT-ANCHOR .
/GICOM/VMNAVANCT-LANGU =
/GICOM/TNAVANCT-LANGU .
/GICOM/VMNAVANCT-TITLE =
/GICOM/TNAVANCT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVANCT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVANCT-ANCHOR TO
/GICOM/TNAVANCT-ANCHOR .
MOVE /GICOM/VMNAVANCT-LANGU TO
/GICOM/TNAVANCT-LANGU .
MOVE /GICOM/VMNAVANCT-CLNT TO
/GICOM/TNAVANCT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVANCT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVANCT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVANCT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVASS.................................*
FORM GET_DATA_/GICOM/VMNAVASS.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVASS WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVASS .
/GICOM/VMNAVASS-CLNT =
/GICOM/TNAVASS-CLNT .
/GICOM/VMNAVASS-APPL =
/GICOM/TNAVASS-APPL .
/GICOM/VMNAVASS-SCREEN_KEY =
/GICOM/TNAVASS-SCREEN_KEY .
/GICOM/VMNAVASS-ANCHOR =
/GICOM/TNAVASS-ANCHOR .
/GICOM/VMNAVASS-OBJECT =
/GICOM/TNAVASS-OBJECT .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVASS.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVASS .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVASS.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVASS-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVASS WHERE
  APPL = /GICOM/VMNAVASS-APPL AND
  SCREEN_KEY = /GICOM/VMNAVASS-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVASS-ANCHOR AND
  OBJECT = /GICOM/VMNAVASS-OBJECT .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVASS .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVASS WHERE
  APPL = /GICOM/VMNAVASS-APPL AND
  SCREEN_KEY = /GICOM/VMNAVASS-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVASS-ANCHOR AND
  OBJECT = /GICOM/VMNAVASS-OBJECT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVASS.
    ENDIF.
/GICOM/TNAVASS-CLNT =
/GICOM/VMNAVASS-CLNT .
/GICOM/TNAVASS-APPL =
/GICOM/VMNAVASS-APPL .
/GICOM/TNAVASS-SCREEN_KEY =
/GICOM/VMNAVASS-SCREEN_KEY .
/GICOM/TNAVASS-ANCHOR =
/GICOM/VMNAVASS-ANCHOR .
/GICOM/TNAVASS-OBJECT =
/GICOM/VMNAVASS-OBJECT .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVASS ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVASS .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVASS-UPD_FLAG,
STATUS_/GICOM/VMNAVASS-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVASS.
  SELECT SINGLE * FROM /GICOM/TNAVASS WHERE
APPL = /GICOM/VMNAVASS-APPL AND
SCREEN_KEY = /GICOM/VMNAVASS-SCREEN_KEY AND
ANCHOR = /GICOM/VMNAVASS-ANCHOR AND
OBJECT = /GICOM/VMNAVASS-OBJECT .
/GICOM/VMNAVASS-CLNT =
/GICOM/TNAVASS-CLNT .
/GICOM/VMNAVASS-APPL =
/GICOM/TNAVASS-APPL .
/GICOM/VMNAVASS-SCREEN_KEY =
/GICOM/TNAVASS-SCREEN_KEY .
/GICOM/VMNAVASS-ANCHOR =
/GICOM/TNAVASS-ANCHOR .
/GICOM/VMNAVASS-OBJECT =
/GICOM/TNAVASS-OBJECT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVASS USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVASS-APPL TO
/GICOM/TNAVASS-APPL .
MOVE /GICOM/VMNAVASS-SCREEN_KEY TO
/GICOM/TNAVASS-SCREEN_KEY .
MOVE /GICOM/VMNAVASS-ANCHOR TO
/GICOM/TNAVASS-ANCHOR .
MOVE /GICOM/VMNAVASS-OBJECT TO
/GICOM/TNAVASS-OBJECT .
MOVE /GICOM/VMNAVASS-CLNT TO
/GICOM/TNAVASS-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVASS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVASS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVASS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVASSP................................*
FORM GET_DATA_/GICOM/VMNAVASSP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVASSP WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVASSP .
/GICOM/VMNAVASSP-CLNT =
/GICOM/TNAVASSP-CLNT .
/GICOM/VMNAVASSP-APPL =
/GICOM/TNAVASSP-APPL .
/GICOM/VMNAVASSP-SCREEN_KEY =
/GICOM/TNAVASSP-SCREEN_KEY .
/GICOM/VMNAVASSP-ANCHOR =
/GICOM/TNAVASSP-ANCHOR .
/GICOM/VMNAVASSP-OBJECT =
/GICOM/TNAVASSP-OBJECT .
/GICOM/VMNAVASSP-PARAM =
/GICOM/TNAVASSP-PARAM .
/GICOM/VMNAVASSP-VALUE =
/GICOM/TNAVASSP-VALUE .
/GICOM/VMNAVASSP-X_MULTIPLE =
/GICOM/TNAVASSP-X_MULTIPLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVASSP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVASSP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVASSP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVASSP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVASSP WHERE
  APPL = /GICOM/VMNAVASSP-APPL AND
  SCREEN_KEY = /GICOM/VMNAVASSP-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVASSP-ANCHOR AND
  OBJECT = /GICOM/VMNAVASSP-OBJECT AND
  PARAM = /GICOM/VMNAVASSP-PARAM .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVASSP .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVASSP WHERE
  APPL = /GICOM/VMNAVASSP-APPL AND
  SCREEN_KEY = /GICOM/VMNAVASSP-SCREEN_KEY AND
  ANCHOR = /GICOM/VMNAVASSP-ANCHOR AND
  OBJECT = /GICOM/VMNAVASSP-OBJECT AND
  PARAM = /GICOM/VMNAVASSP-PARAM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVASSP.
    ENDIF.
/GICOM/TNAVASSP-CLNT =
/GICOM/VMNAVASSP-CLNT .
/GICOM/TNAVASSP-APPL =
/GICOM/VMNAVASSP-APPL .
/GICOM/TNAVASSP-SCREEN_KEY =
/GICOM/VMNAVASSP-SCREEN_KEY .
/GICOM/TNAVASSP-ANCHOR =
/GICOM/VMNAVASSP-ANCHOR .
/GICOM/TNAVASSP-OBJECT =
/GICOM/VMNAVASSP-OBJECT .
/GICOM/TNAVASSP-PARAM =
/GICOM/VMNAVASSP-PARAM .
/GICOM/TNAVASSP-VALUE =
/GICOM/VMNAVASSP-VALUE .
/GICOM/TNAVASSP-X_MULTIPLE =
/GICOM/VMNAVASSP-X_MULTIPLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVASSP ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVASSP .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVASSP-UPD_FLAG,
STATUS_/GICOM/VMNAVASSP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVASSP.
  SELECT SINGLE * FROM /GICOM/TNAVASSP WHERE
APPL = /GICOM/VMNAVASSP-APPL AND
SCREEN_KEY = /GICOM/VMNAVASSP-SCREEN_KEY AND
ANCHOR = /GICOM/VMNAVASSP-ANCHOR AND
OBJECT = /GICOM/VMNAVASSP-OBJECT AND
PARAM = /GICOM/VMNAVASSP-PARAM .
/GICOM/VMNAVASSP-CLNT =
/GICOM/TNAVASSP-CLNT .
/GICOM/VMNAVASSP-APPL =
/GICOM/TNAVASSP-APPL .
/GICOM/VMNAVASSP-SCREEN_KEY =
/GICOM/TNAVASSP-SCREEN_KEY .
/GICOM/VMNAVASSP-ANCHOR =
/GICOM/TNAVASSP-ANCHOR .
/GICOM/VMNAVASSP-OBJECT =
/GICOM/TNAVASSP-OBJECT .
/GICOM/VMNAVASSP-PARAM =
/GICOM/TNAVASSP-PARAM .
/GICOM/VMNAVASSP-VALUE =
/GICOM/TNAVASSP-VALUE .
/GICOM/VMNAVASSP-X_MULTIPLE =
/GICOM/TNAVASSP-X_MULTIPLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVASSP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVASSP-APPL TO
/GICOM/TNAVASSP-APPL .
MOVE /GICOM/VMNAVASSP-SCREEN_KEY TO
/GICOM/TNAVASSP-SCREEN_KEY .
MOVE /GICOM/VMNAVASSP-ANCHOR TO
/GICOM/TNAVASSP-ANCHOR .
MOVE /GICOM/VMNAVASSP-OBJECT TO
/GICOM/TNAVASSP-OBJECT .
MOVE /GICOM/VMNAVASSP-PARAM TO
/GICOM/TNAVASSP-PARAM .
MOVE /GICOM/VMNAVASSP-CLNT TO
/GICOM/TNAVASSP-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVASSP'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVASSP TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVASSP'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVOBJ.................................*
FORM GET_DATA_/GICOM/VMNAVOBJ.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVOBJ WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVOBJ .
/GICOM/VMNAVOBJ-CLNT =
/GICOM/TNAVOBJ-CLNT .
/GICOM/VMNAVOBJ-OBJECT =
/GICOM/TNAVOBJ-OBJECT .
/GICOM/VMNAVOBJ-TYPE =
/GICOM/TNAVOBJ-TYPE .
/GICOM/VMNAVOBJ-BSP =
/GICOM/TNAVOBJ-BSP .
/GICOM/VMNAVOBJ-ROUTE =
/GICOM/TNAVOBJ-ROUTE .
/GICOM/VMNAVOBJ-PATTERN =
/GICOM/TNAVOBJ-PATTERN .
/GICOM/VMNAVOBJ-URL =
/GICOM/TNAVOBJ-URL .
/GICOM/VMNAVOBJ-X_NEW_WINDOW =
/GICOM/TNAVOBJ-X_NEW_WINDOW .
    SELECT SINGLE * FROM /GICOM/TNAVOBJT WHERE
OBJECT = /GICOM/TNAVOBJ-OBJECT AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVOBJ-TITLE =
/GICOM/TNAVOBJT-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VMNAVOBJ.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVOBJ .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVOBJ.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVOBJ-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJ WHERE
  OBJECT = /GICOM/VMNAVOBJ-OBJECT .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVOBJ .
    ENDIF.
    DELETE FROM /GICOM/TNAVOBJT WHERE
    OBJECT = /GICOM/TNAVOBJ-OBJECT .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJ WHERE
  OBJECT = /GICOM/VMNAVOBJ-OBJECT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVOBJ.
    ENDIF.
/GICOM/TNAVOBJ-CLNT =
/GICOM/VMNAVOBJ-CLNT .
/GICOM/TNAVOBJ-OBJECT =
/GICOM/VMNAVOBJ-OBJECT .
/GICOM/TNAVOBJ-TYPE =
/GICOM/VMNAVOBJ-TYPE .
/GICOM/TNAVOBJ-BSP =
/GICOM/VMNAVOBJ-BSP .
/GICOM/TNAVOBJ-ROUTE =
/GICOM/VMNAVOBJ-ROUTE .
/GICOM/TNAVOBJ-PATTERN =
/GICOM/VMNAVOBJ-PATTERN .
/GICOM/TNAVOBJ-URL =
/GICOM/VMNAVOBJ-URL .
/GICOM/TNAVOBJ-X_NEW_WINDOW =
/GICOM/VMNAVOBJ-X_NEW_WINDOW .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVOBJ ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVOBJ .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJT WHERE
    OBJECT = /GICOM/TNAVOBJ-OBJECT AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TNAVOBJT.
/GICOM/TNAVOBJT-OBJECT =
/GICOM/TNAVOBJ-OBJECT .
/GICOM/TNAVOBJT-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TNAVOBJT-TITLE =
/GICOM/VMNAVOBJ-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVOBJT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVOBJT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVOBJ-UPD_FLAG,
STATUS_/GICOM/VMNAVOBJ-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVOBJ.
  SELECT SINGLE * FROM /GICOM/TNAVOBJ WHERE
OBJECT = /GICOM/VMNAVOBJ-OBJECT .
/GICOM/VMNAVOBJ-CLNT =
/GICOM/TNAVOBJ-CLNT .
/GICOM/VMNAVOBJ-OBJECT =
/GICOM/TNAVOBJ-OBJECT .
/GICOM/VMNAVOBJ-TYPE =
/GICOM/TNAVOBJ-TYPE .
/GICOM/VMNAVOBJ-BSP =
/GICOM/TNAVOBJ-BSP .
/GICOM/VMNAVOBJ-ROUTE =
/GICOM/TNAVOBJ-ROUTE .
/GICOM/VMNAVOBJ-PATTERN =
/GICOM/TNAVOBJ-PATTERN .
/GICOM/VMNAVOBJ-URL =
/GICOM/TNAVOBJ-URL .
/GICOM/VMNAVOBJ-X_NEW_WINDOW =
/GICOM/TNAVOBJ-X_NEW_WINDOW .
    SELECT SINGLE * FROM /GICOM/TNAVOBJT WHERE
OBJECT = /GICOM/TNAVOBJ-OBJECT AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVOBJ-TITLE =
/GICOM/TNAVOBJT-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VMNAVOBJ-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVOBJ USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVOBJ-OBJECT TO
/GICOM/TNAVOBJ-OBJECT .
MOVE /GICOM/VMNAVOBJ-CLNT TO
/GICOM/TNAVOBJ-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVOBJ'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVOBJ TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVOBJ'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TNAVOBJ-OBJECT TO
/GICOM/TNAVOBJT-OBJECT .
MOVE SY-LANGU TO
/GICOM/TNAVOBJT-LANGU .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVOBJP................................*
FORM GET_DATA_/GICOM/VMNAVOBJP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVOBJP WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVOBJP .
/GICOM/VMNAVOBJP-CLNT =
/GICOM/TNAVOBJP-CLNT .
/GICOM/VMNAVOBJP-OBJECT =
/GICOM/TNAVOBJP-OBJECT .
/GICOM/VMNAVOBJP-PARAM =
/GICOM/TNAVOBJP-PARAM .
/GICOM/VMNAVOBJP-X_REQUIRED =
/GICOM/TNAVOBJP-X_REQUIRED .
/GICOM/VMNAVOBJP-X_MULTIPLE =
/GICOM/TNAVOBJP-X_MULTIPLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVOBJP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVOBJP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVOBJP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVOBJP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJP WHERE
  OBJECT = /GICOM/VMNAVOBJP-OBJECT AND
  PARAM = /GICOM/VMNAVOBJP-PARAM .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVOBJP .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJP WHERE
  OBJECT = /GICOM/VMNAVOBJP-OBJECT AND
  PARAM = /GICOM/VMNAVOBJP-PARAM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVOBJP.
    ENDIF.
/GICOM/TNAVOBJP-CLNT =
/GICOM/VMNAVOBJP-CLNT .
/GICOM/TNAVOBJP-OBJECT =
/GICOM/VMNAVOBJP-OBJECT .
/GICOM/TNAVOBJP-PARAM =
/GICOM/VMNAVOBJP-PARAM .
/GICOM/TNAVOBJP-X_REQUIRED =
/GICOM/VMNAVOBJP-X_REQUIRED .
/GICOM/TNAVOBJP-X_MULTIPLE =
/GICOM/VMNAVOBJP-X_MULTIPLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVOBJP ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVOBJP .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVOBJP-UPD_FLAG,
STATUS_/GICOM/VMNAVOBJP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVOBJP.
  SELECT SINGLE * FROM /GICOM/TNAVOBJP WHERE
OBJECT = /GICOM/VMNAVOBJP-OBJECT AND
PARAM = /GICOM/VMNAVOBJP-PARAM .
/GICOM/VMNAVOBJP-CLNT =
/GICOM/TNAVOBJP-CLNT .
/GICOM/VMNAVOBJP-OBJECT =
/GICOM/TNAVOBJP-OBJECT .
/GICOM/VMNAVOBJP-PARAM =
/GICOM/TNAVOBJP-PARAM .
/GICOM/VMNAVOBJP-X_REQUIRED =
/GICOM/TNAVOBJP-X_REQUIRED .
/GICOM/VMNAVOBJP-X_MULTIPLE =
/GICOM/TNAVOBJP-X_MULTIPLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVOBJP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVOBJP-OBJECT TO
/GICOM/TNAVOBJP-OBJECT .
MOVE /GICOM/VMNAVOBJP-PARAM TO
/GICOM/TNAVOBJP-PARAM .
MOVE /GICOM/VMNAVOBJP-CLNT TO
/GICOM/TNAVOBJP-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVOBJP'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVOBJP TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVOBJP'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVOBJT................................*
FORM GET_DATA_/GICOM/VMNAVOBJT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVOBJT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVOBJT .
/GICOM/VMNAVOBJT-CLNT =
/GICOM/TNAVOBJT-CLNT .
/GICOM/VMNAVOBJT-OBJECT =
/GICOM/TNAVOBJT-OBJECT .
/GICOM/VMNAVOBJT-LANGU =
/GICOM/TNAVOBJT-LANGU .
/GICOM/VMNAVOBJT-TITLE =
/GICOM/TNAVOBJT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVOBJT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVOBJT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVOBJT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVOBJT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJT WHERE
  OBJECT = /GICOM/VMNAVOBJT-OBJECT AND
  LANGU = /GICOM/VMNAVOBJT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVOBJT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVOBJT WHERE
  OBJECT = /GICOM/VMNAVOBJT-OBJECT AND
  LANGU = /GICOM/VMNAVOBJT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVOBJT.
    ENDIF.
/GICOM/TNAVOBJT-CLNT =
/GICOM/VMNAVOBJT-CLNT .
/GICOM/TNAVOBJT-OBJECT =
/GICOM/VMNAVOBJT-OBJECT .
/GICOM/TNAVOBJT-LANGU =
/GICOM/VMNAVOBJT-LANGU .
/GICOM/TNAVOBJT-TITLE =
/GICOM/VMNAVOBJT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVOBJT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVOBJT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVOBJT-UPD_FLAG,
STATUS_/GICOM/VMNAVOBJT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVOBJT.
  SELECT SINGLE * FROM /GICOM/TNAVOBJT WHERE
OBJECT = /GICOM/VMNAVOBJT-OBJECT AND
LANGU = /GICOM/VMNAVOBJT-LANGU .
/GICOM/VMNAVOBJT-CLNT =
/GICOM/TNAVOBJT-CLNT .
/GICOM/VMNAVOBJT-OBJECT =
/GICOM/TNAVOBJT-OBJECT .
/GICOM/VMNAVOBJT-LANGU =
/GICOM/TNAVOBJT-LANGU .
/GICOM/VMNAVOBJT-TITLE =
/GICOM/TNAVOBJT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVOBJT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVOBJT-OBJECT TO
/GICOM/TNAVOBJT-OBJECT .
MOVE /GICOM/VMNAVOBJT-LANGU TO
/GICOM/TNAVOBJT-LANGU .
MOVE /GICOM/VMNAVOBJT-CLNT TO
/GICOM/TNAVOBJT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVOBJT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVOBJT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVOBJT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVTYPE................................*
FORM GET_DATA_/GICOM/VMNAVTYPE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVTYPE WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVTYPE .
/GICOM/VMNAVTYPE-CLNT =
/GICOM/TNAVTYPE-CLNT .
/GICOM/VMNAVTYPE-TYPE =
/GICOM/TNAVTYPE-TYPE .
/GICOM/VMNAVTYPE-COUNT_NAV_OBJECT =
/GICOM/TNAVTYPE-COUNT_NAV_OBJECT .
    SELECT SINGLE * FROM /GICOM/TNAVTYPET WHERE
TYPE = /GICOM/TNAVTYPE-TYPE AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVTYPE-TITLE =
/GICOM/TNAVTYPET-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VMNAVTYPE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVTYPE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVTYPE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVTYPE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVTYPE WHERE
  TYPE = /GICOM/VMNAVTYPE-TYPE .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVTYPE .
    ENDIF.
    DELETE FROM /GICOM/TNAVTYPET WHERE
    TYPE = /GICOM/TNAVTYPE-TYPE .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVTYPE WHERE
  TYPE = /GICOM/VMNAVTYPE-TYPE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVTYPE.
    ENDIF.
/GICOM/TNAVTYPE-CLNT =
/GICOM/VMNAVTYPE-CLNT .
/GICOM/TNAVTYPE-TYPE =
/GICOM/VMNAVTYPE-TYPE .
/GICOM/TNAVTYPE-COUNT_NAV_OBJECT =
/GICOM/VMNAVTYPE-COUNT_NAV_OBJECT .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVTYPE ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVTYPE .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVTYPET WHERE
    TYPE = /GICOM/TNAVTYPE-TYPE AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TNAVTYPET.
/GICOM/TNAVTYPET-TYPE =
/GICOM/TNAVTYPE-TYPE .
/GICOM/TNAVTYPET-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TNAVTYPET-TITLE =
/GICOM/VMNAVTYPE-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVTYPET ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVTYPET .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVTYPE-UPD_FLAG,
STATUS_/GICOM/VMNAVTYPE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVTYPE.
  SELECT SINGLE * FROM /GICOM/TNAVTYPE WHERE
TYPE = /GICOM/VMNAVTYPE-TYPE .
/GICOM/VMNAVTYPE-CLNT =
/GICOM/TNAVTYPE-CLNT .
/GICOM/VMNAVTYPE-TYPE =
/GICOM/TNAVTYPE-TYPE .
/GICOM/VMNAVTYPE-COUNT_NAV_OBJECT =
/GICOM/TNAVTYPE-COUNT_NAV_OBJECT .
    SELECT SINGLE * FROM /GICOM/TNAVTYPET WHERE
TYPE = /GICOM/TNAVTYPE-TYPE AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VMNAVTYPE-TITLE =
/GICOM/TNAVTYPET-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VMNAVTYPE-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVTYPE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVTYPE-TYPE TO
/GICOM/TNAVTYPE-TYPE .
MOVE /GICOM/VMNAVTYPE-CLNT TO
/GICOM/TNAVTYPE-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVTYPE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVTYPE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVTYPE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TNAVTYPE-TYPE TO
/GICOM/TNAVTYPET-TYPE .
MOVE SY-LANGU TO
/GICOM/TNAVTYPET-LANGU .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMNAVTYPT................................*
FORM GET_DATA_/GICOM/VMNAVTYPT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TNAVTYPET WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMNAVTYPT .
/GICOM/VMNAVTYPT-CLNT =
/GICOM/TNAVTYPET-CLNT .
/GICOM/VMNAVTYPT-TYPE =
/GICOM/TNAVTYPET-TYPE .
/GICOM/VMNAVTYPT-LANGU =
/GICOM/TNAVTYPET-LANGU .
/GICOM/VMNAVTYPT-TITLE =
/GICOM/TNAVTYPET-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VMNAVTYPT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMNAVTYPT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMNAVTYPT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMNAVTYPT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVTYPET WHERE
  TYPE = /GICOM/VMNAVTYPT-TYPE AND
  LANGU = /GICOM/VMNAVTYPT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TNAVTYPET .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TNAVTYPET WHERE
  TYPE = /GICOM/VMNAVTYPT-TYPE AND
  LANGU = /GICOM/VMNAVTYPT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TNAVTYPET.
    ENDIF.
/GICOM/TNAVTYPET-CLNT =
/GICOM/VMNAVTYPT-CLNT .
/GICOM/TNAVTYPET-TYPE =
/GICOM/VMNAVTYPT-TYPE .
/GICOM/TNAVTYPET-LANGU =
/GICOM/VMNAVTYPT-LANGU .
/GICOM/TNAVTYPET-TITLE =
/GICOM/VMNAVTYPT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TNAVTYPET ##WARN_OK.
    ELSE.
    INSERT /GICOM/TNAVTYPET .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMNAVTYPT-UPD_FLAG,
STATUS_/GICOM/VMNAVTYPT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMNAVTYPT.
  SELECT SINGLE * FROM /GICOM/TNAVTYPET WHERE
TYPE = /GICOM/VMNAVTYPT-TYPE AND
LANGU = /GICOM/VMNAVTYPT-LANGU .
/GICOM/VMNAVTYPT-CLNT =
/GICOM/TNAVTYPET-CLNT .
/GICOM/VMNAVTYPT-TYPE =
/GICOM/TNAVTYPET-TYPE .
/GICOM/VMNAVTYPT-LANGU =
/GICOM/TNAVTYPET-LANGU .
/GICOM/VMNAVTYPT-TITLE =
/GICOM/TNAVTYPET-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMNAVTYPT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMNAVTYPT-TYPE TO
/GICOM/TNAVTYPET-TYPE .
MOVE /GICOM/VMNAVTYPT-LANGU TO
/GICOM/TNAVTYPET-LANGU .
MOVE /GICOM/VMNAVTYPT-CLNT TO
/GICOM/TNAVTYPET-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TNAVTYPET'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TNAVTYPET TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TNAVTYPET'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMSRCTYPT................................*
FORM GET_DATA_/GICOM/VMSRCTYPT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TSRC_TYPT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMSRCTYPT .
/GICOM/VMSRCTYPT-CLNT =
/GICOM/TSRC_TYPT-CLNT .
/GICOM/VMSRCTYPT-TYPE =
/GICOM/TSRC_TYPT-TYPE .
/GICOM/VMSRCTYPT-LANGU =
/GICOM/TSRC_TYPT-LANGU .
/GICOM/VMSRCTYPT-TITLE =
/GICOM/TSRC_TYPT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VMSRCTYPT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMSRCTYPT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMSRCTYPT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMSRCTYPT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TSRC_TYPT WHERE
  TYPE = /GICOM/VMSRCTYPT-TYPE AND
  LANGU = /GICOM/VMSRCTYPT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TSRC_TYPT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TSRC_TYPT WHERE
  TYPE = /GICOM/VMSRCTYPT-TYPE AND
  LANGU = /GICOM/VMSRCTYPT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TSRC_TYPT.
    ENDIF.
/GICOM/TSRC_TYPT-CLNT =
/GICOM/VMSRCTYPT-CLNT .
/GICOM/TSRC_TYPT-TYPE =
/GICOM/VMSRCTYPT-TYPE .
/GICOM/TSRC_TYPT-LANGU =
/GICOM/VMSRCTYPT-LANGU .
/GICOM/TSRC_TYPT-TITLE =
/GICOM/VMSRCTYPT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TSRC_TYPT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TSRC_TYPT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMSRCTYPT-UPD_FLAG,
STATUS_/GICOM/VMSRCTYPT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMSRCTYPT.
  SELECT SINGLE * FROM /GICOM/TSRC_TYPT WHERE
TYPE = /GICOM/VMSRCTYPT-TYPE AND
LANGU = /GICOM/VMSRCTYPT-LANGU .
/GICOM/VMSRCTYPT-CLNT =
/GICOM/TSRC_TYPT-CLNT .
/GICOM/VMSRCTYPT-TYPE =
/GICOM/TSRC_TYPT-TYPE .
/GICOM/VMSRCTYPT-LANGU =
/GICOM/TSRC_TYPT-LANGU .
/GICOM/VMSRCTYPT-TITLE =
/GICOM/TSRC_TYPT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMSRCTYPT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMSRCTYPT-TYPE TO
/GICOM/TSRC_TYPT-TYPE .
MOVE /GICOM/VMSRCTYPT-LANGU TO
/GICOM/TSRC_TYPT-LANGU .
MOVE /GICOM/VMSRCTYPT-CLNT TO
/GICOM/TSRC_TYPT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TSRC_TYPT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TSRC_TYPT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TSRC_TYPT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VMUISCRN.................................*
FORM GET_DATA_/GICOM/VMUISCRN.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TUISCREEN WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VMUISCRN .
/GICOM/VMUISCRN-CLNT =
/GICOM/TUISCREEN-CLNT .
/GICOM/VMUISCRN-SCREEN_KEY =
/GICOM/TUISCREEN-SCREEN_KEY .
/GICOM/VMUISCRN-SCREEN_NAME =
/GICOM/TUISCREEN-SCREEN_NAME .
/GICOM/VMUISCRN-VIEW_ID =
/GICOM/TUISCREEN-VIEW_ID .
<VIM_TOTAL_STRUC> = /GICOM/VMUISCRN.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VMUISCRN .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VMUISCRN.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VMUISCRN-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TUISCREEN WHERE
  SCREEN_KEY = /GICOM/VMUISCRN-SCREEN_KEY .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TUISCREEN .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TUISCREEN WHERE
  SCREEN_KEY = /GICOM/VMUISCRN-SCREEN_KEY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TUISCREEN.
    ENDIF.
/GICOM/TUISCREEN-CLNT =
/GICOM/VMUISCRN-CLNT .
/GICOM/TUISCREEN-SCREEN_KEY =
/GICOM/VMUISCRN-SCREEN_KEY .
/GICOM/TUISCREEN-SCREEN_NAME =
/GICOM/VMUISCRN-SCREEN_NAME .
/GICOM/TUISCREEN-VIEW_ID =
/GICOM/VMUISCRN-VIEW_ID .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TUISCREEN ##WARN_OK.
    ELSE.
    INSERT /GICOM/TUISCREEN .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VMUISCRN-UPD_FLAG,
STATUS_/GICOM/VMUISCRN-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VMUISCRN.
  SELECT SINGLE * FROM /GICOM/TUISCREEN WHERE
SCREEN_KEY = /GICOM/VMUISCRN-SCREEN_KEY .
/GICOM/VMUISCRN-CLNT =
/GICOM/TUISCREEN-CLNT .
/GICOM/VMUISCRN-SCREEN_KEY =
/GICOM/TUISCREEN-SCREEN_KEY .
/GICOM/VMUISCRN-SCREEN_NAME =
/GICOM/TUISCREEN-SCREEN_NAME .
/GICOM/VMUISCRN-VIEW_ID =
/GICOM/TUISCREEN-VIEW_ID .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VMUISCRN USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VMUISCRN-SCREEN_KEY TO
/GICOM/TUISCREEN-SCREEN_KEY .
MOVE /GICOM/VMUISCRN-CLNT TO
/GICOM/TUISCREEN-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TUISCREEN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TUISCREEN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TUISCREEN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_ADDFIG................................*
FORM GET_DATA_/GICOM/VM_ADDFIG.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TBAASPFIG WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_ADDFIG .
/GICOM/VM_ADDFIG-CLNT =
/GICOM/TBAASPFIG-CLNT .
/GICOM/VM_ADDFIG-GUID =
/GICOM/TBAASPFIG-GUID .
/GICOM/VM_ADDFIG-TYPE_FIGURE =
/GICOM/TBAASPFIG-TYPE_FIGURE .
/GICOM/VM_ADDFIG-COND_GROUP =
/GICOM/TBAASPFIG-COND_GROUP .
/GICOM/VM_ADDFIG-COND_TYPE =
/GICOM/TBAASPFIG-COND_TYPE .
/GICOM/VM_ADDFIG-IMPLEMENTING_CLASS =
/GICOM/TBAASPFIG-IMPLEMENTING_CLASS .
/GICOM/VM_ADDFIG-TOTAL_TYPE =
/GICOM/TBAASPFIG-TOTAL_TYPE .
/GICOM/VM_ADDFIG-CREATED_BY =
/GICOM/TBAASPFIG-CREATED_BY .
/GICOM/VM_ADDFIG-LAST_CHANGED_BY =
/GICOM/TBAASPFIG-LAST_CHANGED_BY .
    SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/TBAASPFIG-GUID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_ADDFIG-TITLE =
/GICOM/TBAASPFIT-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_ADDFIG.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_ADDFIG .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_ADDFIG.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_ADDFIG-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPFIG WHERE
  GUID = /GICOM/VM_ADDFIG-GUID .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TBAASPFIG .
    ENDIF.
    DELETE FROM /GICOM/TBAASPFIT WHERE
    GUID = /GICOM/TBAASPFIG-GUID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPFIG WHERE
  GUID = /GICOM/VM_ADDFIG-GUID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TBAASPFIG.
    ENDIF.
/GICOM/TBAASPFIG-CLNT =
/GICOM/VM_ADDFIG-CLNT .
/GICOM/TBAASPFIG-GUID =
/GICOM/VM_ADDFIG-GUID .
/GICOM/TBAASPFIG-TYPE_FIGURE =
/GICOM/VM_ADDFIG-TYPE_FIGURE .
/GICOM/TBAASPFIG-COND_GROUP =
/GICOM/VM_ADDFIG-COND_GROUP .
/GICOM/TBAASPFIG-COND_TYPE =
/GICOM/VM_ADDFIG-COND_TYPE .
/GICOM/TBAASPFIG-IMPLEMENTING_CLASS =
/GICOM/VM_ADDFIG-IMPLEMENTING_CLASS .
/GICOM/TBAASPFIG-TOTAL_TYPE =
/GICOM/VM_ADDFIG-TOTAL_TYPE .
/GICOM/TBAASPFIG-CREATED_BY =
/GICOM/VM_ADDFIG-CREATED_BY .
/GICOM/TBAASPFIG-LAST_CHANGED_BY =
/GICOM/VM_ADDFIG-LAST_CHANGED_BY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TBAASPFIG ##WARN_OK.
    ELSE.
    INSERT /GICOM/TBAASPFIG .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPFIT WHERE
    GUID = /GICOM/TBAASPFIG-GUID AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TBAASPFIT.
/GICOM/TBAASPFIT-GUID =
/GICOM/TBAASPFIG-GUID .
/GICOM/TBAASPFIT-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TBAASPFIT-TITLE =
/GICOM/VM_ADDFIG-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TBAASPFIT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TBAASPFIT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_ADDFIG-UPD_FLAG,
STATUS_/GICOM/VM_ADDFIG-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_ADDFIG.
  SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/VM_ADDFIG-GUID .
/GICOM/VM_ADDFIG-CLNT =
/GICOM/TBAASPFIG-CLNT .
/GICOM/VM_ADDFIG-GUID =
/GICOM/TBAASPFIG-GUID .
/GICOM/VM_ADDFIG-TYPE_FIGURE =
/GICOM/TBAASPFIG-TYPE_FIGURE .
/GICOM/VM_ADDFIG-COND_GROUP =
/GICOM/TBAASPFIG-COND_GROUP .
/GICOM/VM_ADDFIG-COND_TYPE =
/GICOM/TBAASPFIG-COND_TYPE .
/GICOM/VM_ADDFIG-IMPLEMENTING_CLASS =
/GICOM/TBAASPFIG-IMPLEMENTING_CLASS .
/GICOM/VM_ADDFIG-TOTAL_TYPE =
/GICOM/TBAASPFIG-TOTAL_TYPE .
/GICOM/VM_ADDFIG-CREATED_BY =
/GICOM/TBAASPFIG-CREATED_BY .
/GICOM/VM_ADDFIG-LAST_CHANGED_BY =
/GICOM/TBAASPFIG-LAST_CHANGED_BY .
    SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/TBAASPFIG-GUID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_ADDFIG-TITLE =
/GICOM/TBAASPFIT-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VM_ADDFIG-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_ADDFIG USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_ADDFIG-GUID TO
/GICOM/TBAASPFIG-GUID .
MOVE /GICOM/VM_ADDFIG-CLNT TO
/GICOM/TBAASPFIG-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TBAASPFIG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TBAASPFIG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TBAASPFIG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TBAASPFIG-GUID TO
/GICOM/TBAASPFIT-GUID .
MOVE SY-LANGU TO
/GICOM/TBAASPFIT-LANGU .
MOVE /GICOM/VM_ADDFIG-CLNT TO
/GICOM/TBAASPFIT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TBAASPFIT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TBAASPFIT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TBAASPFIT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_CH_RSA................................*
FORM GET_DATA_/GICOM/VM_CH_RSA.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TCNT_CHG WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_CH_RSA .
/GICOM/VM_CH_RSA-CLNT =
/GICOM/TCNT_CHG-CLNT .
/GICOM/VM_CH_RSA-REASON =
/GICOM/TCNT_CHG-REASON .
/GICOM/VM_CH_RSA-CONTRACT_TYPE =
/GICOM/TCNT_CHG-CONTRACT_TYPE .
/GICOM/VM_CH_RSA-X_APPLIES_TO_CORRECTION =
/GICOM/TCNT_CHG-X_APPLIES_TO_CORRECTION .
/GICOM/VM_CH_RSA-X_APPLIES_TO_ADDENDUM =
/GICOM/TCNT_CHG-X_APPLIES_TO_ADDENDUM .
/GICOM/VM_CH_RSA-X_COMMENT_OBLIGATORY =
/GICOM/TCNT_CHG-X_COMMENT_OBLIGATORY .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCNT_CHG-REASON .
    IF SY-SUBRC EQ 0.
    ENDIF.
    SELECT * FROM /GICOM/TCNT_TYP WHERE
TYPE = /GICOM/TCNT_CHG-CONTRACT_TYPE .
      EXIT.
    ENDSELECT.
<VIM_TOTAL_STRUC> = /GICOM/VM_CH_RSA.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_CH_RSA .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_CH_RSA.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_CH_RSA-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCNT_CHG WHERE
  REASON = /GICOM/VM_CH_RSA-REASON AND
  CONTRACT_TYPE = /GICOM/VM_CH_RSA-CONTRACT_TYPE .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TCNT_CHG .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCNT_CHG WHERE
  REASON = /GICOM/VM_CH_RSA-REASON AND
  CONTRACT_TYPE = /GICOM/VM_CH_RSA-CONTRACT_TYPE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TCNT_CHG.
    ENDIF.
/GICOM/TCNT_CHG-CLNT =
/GICOM/VM_CH_RSA-CLNT .
/GICOM/TCNT_CHG-REASON =
/GICOM/VM_CH_RSA-REASON .
/GICOM/TCNT_CHG-CONTRACT_TYPE =
/GICOM/VM_CH_RSA-CONTRACT_TYPE .
/GICOM/TCNT_CHG-X_APPLIES_TO_CORRECTION =
/GICOM/VM_CH_RSA-X_APPLIES_TO_CORRECTION .
/GICOM/TCNT_CHG-X_APPLIES_TO_ADDENDUM =
/GICOM/VM_CH_RSA-X_APPLIES_TO_ADDENDUM .
/GICOM/TCNT_CHG-X_COMMENT_OBLIGATORY =
/GICOM/VM_CH_RSA-X_COMMENT_OBLIGATORY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TCNT_CHG ##WARN_OK.
    ELSE.
    INSERT /GICOM/TCNT_CHG .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_CH_RSA-UPD_FLAG,
STATUS_/GICOM/VM_CH_RSA-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_CH_RSA.
  SELECT SINGLE * FROM /GICOM/TCNT_CHG WHERE
REASON = /GICOM/VM_CH_RSA-REASON AND
CONTRACT_TYPE = /GICOM/VM_CH_RSA-CONTRACT_TYPE .
/GICOM/VM_CH_RSA-CLNT =
/GICOM/TCNT_CHG-CLNT .
/GICOM/VM_CH_RSA-REASON =
/GICOM/TCNT_CHG-REASON .
/GICOM/VM_CH_RSA-CONTRACT_TYPE =
/GICOM/TCNT_CHG-CONTRACT_TYPE .
/GICOM/VM_CH_RSA-X_APPLIES_TO_CORRECTION =
/GICOM/TCNT_CHG-X_APPLIES_TO_CORRECTION .
/GICOM/VM_CH_RSA-X_APPLIES_TO_ADDENDUM =
/GICOM/TCNT_CHG-X_APPLIES_TO_ADDENDUM .
/GICOM/VM_CH_RSA-X_COMMENT_OBLIGATORY =
/GICOM/TCNT_CHG-X_COMMENT_OBLIGATORY .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCNT_CHG-REASON .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
    SELECT * FROM /GICOM/TCNT_TYP WHERE
TYPE = /GICOM/TCNT_CHG-CONTRACT_TYPE .
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_CH_RSA USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_CH_RSA-REASON TO
/GICOM/TCNT_CHG-REASON .
MOVE /GICOM/VM_CH_RSA-CONTRACT_TYPE TO
/GICOM/TCNT_CHG-CONTRACT_TYPE .
MOVE /GICOM/VM_CH_RSA-CLNT TO
/GICOM/TCNT_CHG-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TCNT_CHG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TCNT_CHG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TCNT_CHG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GICOM/VM_CH_RSA USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GICOM/TCNT_CHG-CLNT =
/GICOM/VM_CH_RSA-CLNT .
/GICOM/TCNT_CHG-REASON =
/GICOM/VM_CH_RSA-REASON .
/GICOM/TCNT_CHG-CONTRACT_TYPE =
/GICOM/VM_CH_RSA-CONTRACT_TYPE .
/GICOM/TCNT_CHG-X_APPLIES_TO_CORRECTION =
/GICOM/VM_CH_RSA-X_APPLIES_TO_CORRECTION .
/GICOM/TCNT_CHG-X_APPLIES_TO_ADDENDUM =
/GICOM/VM_CH_RSA-X_APPLIES_TO_ADDENDUM .
/GICOM/TCNT_CHG-X_COMMENT_OBLIGATORY =
/GICOM/VM_CH_RSA-X_COMMENT_OBLIGATORY .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCNT_CHG-REASON .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
    SELECT * FROM /GICOM/TCNT_TYP WHERE
TYPE = /GICOM/TCNT_CHG-CONTRACT_TYPE .
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: /GICOM/VM_CH_RSN................................*
FORM GET_DATA_/GICOM/VM_CH_RSN.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TCHG_RSN WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_CH_RSN .
/GICOM/VM_CH_RSN-CLNT =
/GICOM/TCHG_RSN-CLNT .
/GICOM/VM_CH_RSN-REASON =
/GICOM/TCHG_RSN-REASON .
    SELECT SINGLE * FROM /GICOM/TCHG_RSNT WHERE
REASON = /GICOM/TCHG_RSN-REASON AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_CH_RSN.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_CH_RSN .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_CH_RSN.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_CH_RSN-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCHG_RSN WHERE
  REASON = /GICOM/VM_CH_RSN-REASON .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TCHG_RSN .
    ENDIF.
    DELETE FROM /GICOM/TCHG_RSNT WHERE
    REASON = /GICOM/TCHG_RSN-REASON .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCHG_RSN WHERE
  REASON = /GICOM/VM_CH_RSN-REASON .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TCHG_RSN.
    ENDIF.
/GICOM/TCHG_RSN-CLNT =
/GICOM/VM_CH_RSN-CLNT .
/GICOM/TCHG_RSN-REASON =
/GICOM/VM_CH_RSN-REASON .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TCHG_RSN ##WARN_OK.
    ELSE.
    INSERT /GICOM/TCHG_RSN .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TCHG_RSNT WHERE
    REASON = /GICOM/TCHG_RSN-REASON AND
    LANGU = SY-LANGU .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TCHG_RSNT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TCHG_RSNT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_CH_RSN-UPD_FLAG,
STATUS_/GICOM/VM_CH_RSN-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_CH_RSN.
  SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/VM_CH_RSN-REASON .
/GICOM/VM_CH_RSN-CLNT =
/GICOM/TCHG_RSN-CLNT .
/GICOM/VM_CH_RSN-REASON =
/GICOM/TCHG_RSN-REASON .
    SELECT SINGLE * FROM /GICOM/TCHG_RSNT WHERE
REASON = /GICOM/TCHG_RSN-REASON AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_CH_RSN USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_CH_RSN-REASON TO
/GICOM/TCHG_RSN-REASON .
MOVE /GICOM/VM_CH_RSN-CLNT TO
/GICOM/TCHG_RSN-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TCHG_RSN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TCHG_RSN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TCHG_RSN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TCHG_RSN-REASON TO
/GICOM/TCHG_RSNT-REASON .
MOVE SY-LANGU TO
/GICOM/TCHG_RSNT-LANGU .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_CH_RST................................*
FORM GET_DATA_/GICOM/VM_CH_RST.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TCHG_RSNT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_CH_RST .
/GICOM/VM_CH_RST-CLNT =
/GICOM/TCHG_RSNT-CLNT .
/GICOM/VM_CH_RST-REASON =
/GICOM/TCHG_RSNT-REASON .
/GICOM/VM_CH_RST-LANGU =
/GICOM/TCHG_RSNT-LANGU .
/GICOM/VM_CH_RST-TITLE =
/GICOM/TCHG_RSNT-TITLE .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCHG_RSNT-REASON .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_CH_RST.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_CH_RST .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_CH_RST.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_CH_RST-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCHG_RSNT WHERE
  REASON = /GICOM/VM_CH_RST-REASON AND
  LANGU = /GICOM/VM_CH_RST-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TCHG_RSNT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TCHG_RSNT WHERE
  REASON = /GICOM/VM_CH_RST-REASON AND
  LANGU = /GICOM/VM_CH_RST-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TCHG_RSNT.
    ENDIF.
/GICOM/TCHG_RSNT-CLNT =
/GICOM/VM_CH_RST-CLNT .
/GICOM/TCHG_RSNT-REASON =
/GICOM/VM_CH_RST-REASON .
/GICOM/TCHG_RSNT-LANGU =
/GICOM/VM_CH_RST-LANGU .
/GICOM/TCHG_RSNT-TITLE =
/GICOM/VM_CH_RST-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TCHG_RSNT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TCHG_RSNT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_CH_RST-UPD_FLAG,
STATUS_/GICOM/VM_CH_RST-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_CH_RST.
  SELECT SINGLE * FROM /GICOM/TCHG_RSNT WHERE
REASON = /GICOM/VM_CH_RST-REASON AND
LANGU = /GICOM/VM_CH_RST-LANGU .
/GICOM/VM_CH_RST-CLNT =
/GICOM/TCHG_RSNT-CLNT .
/GICOM/VM_CH_RST-REASON =
/GICOM/TCHG_RSNT-REASON .
/GICOM/VM_CH_RST-LANGU =
/GICOM/TCHG_RSNT-LANGU .
/GICOM/VM_CH_RST-TITLE =
/GICOM/TCHG_RSNT-TITLE .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCHG_RSNT-REASON .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_CH_RST USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_CH_RST-REASON TO
/GICOM/TCHG_RSNT-REASON .
MOVE /GICOM/VM_CH_RST-LANGU TO
/GICOM/TCHG_RSNT-LANGU .
MOVE /GICOM/VM_CH_RST-CLNT TO
/GICOM/TCHG_RSNT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TCHG_RSNT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TCHG_RSNT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TCHG_RSNT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GICOM/VM_CH_RST USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GICOM/TCHG_RSNT-CLNT =
/GICOM/VM_CH_RST-CLNT .
/GICOM/TCHG_RSNT-REASON =
/GICOM/VM_CH_RST-REASON .
/GICOM/TCHG_RSNT-LANGU =
/GICOM/VM_CH_RST-LANGU .
/GICOM/TCHG_RSNT-TITLE =
/GICOM/VM_CH_RST-TITLE .
    SELECT SINGLE * FROM /GICOM/TCHG_RSN WHERE
REASON = /GICOM/TCHG_RSNT-REASON .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: /GICOM/VM_FIGASS................................*
FORM GET_DATA_/GICOM/VM_FIGASS.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TBAASPASS WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_FIGASS .
/GICOM/VM_FIGASS-CLNT =
/GICOM/TBAASPASS-CLNT .
/GICOM/VM_FIGASS-GUID_CUSTOMIZING =
/GICOM/TBAASPASS-GUID_CUSTOMIZING .
/GICOM/VM_FIGASS-GUID_FIGURE =
/GICOM/TBAASPASS-GUID_FIGURE .
/GICOM/VM_FIGASS-POSITION_FIGURE =
/GICOM/TBAASPASS-POSITION_FIGURE .
/GICOM/VM_FIGASS-CREATED_BY =
/GICOM/TBAASPASS-CREATED_BY .
/GICOM/VM_FIGASS-CREATED_ON =
/GICOM/TBAASPASS-CREATED_ON .
/GICOM/VM_FIGASS-LAST_CHANGED_BY =
/GICOM/TBAASPASS-LAST_CHANGED_BY .
/GICOM/VM_FIGASS-LAST_CHANGED_ON =
/GICOM/TBAASPASS-LAST_CHANGED_ON .
    SELECT SINGLE * FROM /GICOM/TBAASPDEF WHERE
GUID = /GICOM/TBAASPASS-GUID_CUSTOMIZING .
    IF SY-SUBRC EQ 0.
    ENDIF.
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPASS-GUID_FIGURE .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/TBAASPFIG-GUID AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
/GICOM/VM_FIGASS-TITLE =
/GICOM/TBAASPFIT-TITLE .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_FIGASS.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_FIGASS .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_FIGASS.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_FIGASS-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPASS WHERE
  GUID_CUSTOMIZING = /GICOM/VM_FIGASS-GUID_CUSTOMIZING AND
  GUID_FIGURE = /GICOM/VM_FIGASS-GUID_FIGURE .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TBAASPASS .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPASS WHERE
  GUID_CUSTOMIZING = /GICOM/VM_FIGASS-GUID_CUSTOMIZING AND
  GUID_FIGURE = /GICOM/VM_FIGASS-GUID_FIGURE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TBAASPASS.
    ENDIF.
/GICOM/TBAASPASS-CLNT =
/GICOM/VM_FIGASS-CLNT .
/GICOM/TBAASPASS-GUID_CUSTOMIZING =
/GICOM/VM_FIGASS-GUID_CUSTOMIZING .
/GICOM/TBAASPASS-GUID_FIGURE =
/GICOM/VM_FIGASS-GUID_FIGURE .
/GICOM/TBAASPASS-POSITION_FIGURE =
/GICOM/VM_FIGASS-POSITION_FIGURE .
/GICOM/TBAASPASS-CREATED_BY =
/GICOM/VM_FIGASS-CREATED_BY .
/GICOM/TBAASPASS-CREATED_ON =
/GICOM/VM_FIGASS-CREATED_ON .
/GICOM/TBAASPASS-LAST_CHANGED_BY =
/GICOM/VM_FIGASS-LAST_CHANGED_BY .
/GICOM/TBAASPASS-LAST_CHANGED_ON =
/GICOM/VM_FIGASS-LAST_CHANGED_ON .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TBAASPASS ##WARN_OK.
    ELSE.
    INSERT /GICOM/TBAASPASS .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_FIGASS-UPD_FLAG,
STATUS_/GICOM/VM_FIGASS-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_FIGASS.
  SELECT SINGLE * FROM /GICOM/TBAASPASS WHERE
GUID_CUSTOMIZING = /GICOM/VM_FIGASS-GUID_CUSTOMIZING AND
GUID_FIGURE = /GICOM/VM_FIGASS-GUID_FIGURE .
/GICOM/VM_FIGASS-CLNT =
/GICOM/TBAASPASS-CLNT .
/GICOM/VM_FIGASS-GUID_CUSTOMIZING =
/GICOM/TBAASPASS-GUID_CUSTOMIZING .
/GICOM/VM_FIGASS-GUID_FIGURE =
/GICOM/TBAASPASS-GUID_FIGURE .
/GICOM/VM_FIGASS-POSITION_FIGURE =
/GICOM/TBAASPASS-POSITION_FIGURE .
/GICOM/VM_FIGASS-CREATED_BY =
/GICOM/TBAASPASS-CREATED_BY .
/GICOM/VM_FIGASS-CREATED_ON =
/GICOM/TBAASPASS-CREATED_ON .
/GICOM/VM_FIGASS-LAST_CHANGED_BY =
/GICOM/TBAASPASS-LAST_CHANGED_BY .
/GICOM/VM_FIGASS-LAST_CHANGED_ON =
/GICOM/TBAASPASS-LAST_CHANGED_ON .
    SELECT SINGLE * FROM /GICOM/TBAASPDEF WHERE
GUID = /GICOM/TBAASPASS-GUID_CUSTOMIZING .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPASS-GUID_FIGURE .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/TBAASPFIG-GUID AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
/GICOM/VM_FIGASS-TITLE =
/GICOM/TBAASPFIT-TITLE .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR /GICOM/VM_FIGASS-TITLE .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VM_FIGASS-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_FIGASS USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_FIGASS-GUID_CUSTOMIZING TO
/GICOM/TBAASPASS-GUID_CUSTOMIZING .
MOVE /GICOM/VM_FIGASS-GUID_FIGURE TO
/GICOM/TBAASPASS-GUID_FIGURE .
MOVE /GICOM/VM_FIGASS-CLNT TO
/GICOM/TBAASPASS-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TBAASPASS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TBAASPASS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TBAASPASS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GICOM/VM_FIGASS USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GICOM/TBAASPASS-CLNT =
/GICOM/VM_FIGASS-CLNT .
/GICOM/TBAASPASS-GUID_CUSTOMIZING =
/GICOM/VM_FIGASS-GUID_CUSTOMIZING .
/GICOM/TBAASPASS-GUID_FIGURE =
/GICOM/VM_FIGASS-GUID_FIGURE .
/GICOM/TBAASPASS-POSITION_FIGURE =
/GICOM/VM_FIGASS-POSITION_FIGURE .
/GICOM/TBAASPASS-CREATED_BY =
/GICOM/VM_FIGASS-CREATED_BY .
/GICOM/TBAASPASS-CREATED_ON =
/GICOM/VM_FIGASS-CREATED_ON .
/GICOM/TBAASPASS-LAST_CHANGED_BY =
/GICOM/VM_FIGASS-LAST_CHANGED_BY .
/GICOM/TBAASPASS-LAST_CHANGED_ON =
/GICOM/VM_FIGASS-LAST_CHANGED_ON .
    SELECT SINGLE * FROM /GICOM/TBAASPDEF WHERE
GUID = /GICOM/TBAASPASS-GUID_CUSTOMIZING .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPASS-GUID_FIGURE .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/TBAASPFIG-GUID AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
/GICOM/VM_FIGASS-TITLE =
/GICOM/TBAASPFIT-TITLE .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR /GICOM/VM_FIGASS-TITLE .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VM_FIGASS-TITLE .
    ENDIF.
ENDFORM.
*...processing: /GICOM/VM_FIGDEF................................*
FORM GET_DATA_/GICOM/VM_FIGDEF.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TBAASPDEF WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_FIGDEF .
/GICOM/VM_FIGDEF-CLNT =
/GICOM/TBAASPDEF-CLNT .
/GICOM/VM_FIGDEF-GUID =
/GICOM/TBAASPDEF-GUID .
/GICOM/VM_FIGDEF-X_DEFAULT =
/GICOM/TBAASPDEF-X_DEFAULT .
/GICOM/VM_FIGDEF-PRIORITY =
/GICOM/TBAASPDEF-PRIORITY .
/GICOM/VM_FIGDEF-MODEL_AGREEMENT =
/GICOM/TBAASPDEF-MODEL_AGREEMENT .
/GICOM/VM_FIGDEF-TYPE_NGR =
/GICOM/TBAASPDEF-TYPE_NGR .
/GICOM/VM_FIGDEF-AON =
/GICOM/TBAASPDEF-AON .
/GICOM/VM_FIGDEF-SIGHT_TYPE =
/GICOM/TBAASPDEF-SIGHT_TYPE .
/GICOM/VM_FIGDEF-CLUSTER_TYPE =
/GICOM/TBAASPDEF-CLUSTER_TYPE .
/GICOM/VM_FIGDEF-CREATED_BY =
/GICOM/TBAASPDEF-CREATED_BY .
/GICOM/VM_FIGDEF-LAST_CHANGED_BY =
/GICOM/TBAASPDEF-LAST_CHANGED_BY .
<VIM_TOTAL_STRUC> = /GICOM/VM_FIGDEF.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_FIGDEF .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_FIGDEF.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_FIGDEF-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPDEF WHERE
  GUID = /GICOM/VM_FIGDEF-GUID .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TBAASPDEF .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPDEF WHERE
  GUID = /GICOM/VM_FIGDEF-GUID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TBAASPDEF.
    ENDIF.
/GICOM/TBAASPDEF-CLNT =
/GICOM/VM_FIGDEF-CLNT .
/GICOM/TBAASPDEF-GUID =
/GICOM/VM_FIGDEF-GUID .
/GICOM/TBAASPDEF-X_DEFAULT =
/GICOM/VM_FIGDEF-X_DEFAULT .
/GICOM/TBAASPDEF-PRIORITY =
/GICOM/VM_FIGDEF-PRIORITY .
/GICOM/TBAASPDEF-MODEL_AGREEMENT =
/GICOM/VM_FIGDEF-MODEL_AGREEMENT .
/GICOM/TBAASPDEF-TYPE_NGR =
/GICOM/VM_FIGDEF-TYPE_NGR .
/GICOM/TBAASPDEF-AON =
/GICOM/VM_FIGDEF-AON .
/GICOM/TBAASPDEF-SIGHT_TYPE =
/GICOM/VM_FIGDEF-SIGHT_TYPE .
/GICOM/TBAASPDEF-CLUSTER_TYPE =
/GICOM/VM_FIGDEF-CLUSTER_TYPE .
/GICOM/TBAASPDEF-CREATED_BY =
/GICOM/VM_FIGDEF-CREATED_BY .
/GICOM/TBAASPDEF-LAST_CHANGED_BY =
/GICOM/VM_FIGDEF-LAST_CHANGED_BY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TBAASPDEF ##WARN_OK.
    ELSE.
    INSERT /GICOM/TBAASPDEF .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_FIGDEF-UPD_FLAG,
STATUS_/GICOM/VM_FIGDEF-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_FIGDEF.
  SELECT SINGLE * FROM /GICOM/TBAASPDEF WHERE
GUID = /GICOM/VM_FIGDEF-GUID .
/GICOM/VM_FIGDEF-CLNT =
/GICOM/TBAASPDEF-CLNT .
/GICOM/VM_FIGDEF-GUID =
/GICOM/TBAASPDEF-GUID .
/GICOM/VM_FIGDEF-X_DEFAULT =
/GICOM/TBAASPDEF-X_DEFAULT .
/GICOM/VM_FIGDEF-PRIORITY =
/GICOM/TBAASPDEF-PRIORITY .
/GICOM/VM_FIGDEF-MODEL_AGREEMENT =
/GICOM/TBAASPDEF-MODEL_AGREEMENT .
/GICOM/VM_FIGDEF-TYPE_NGR =
/GICOM/TBAASPDEF-TYPE_NGR .
/GICOM/VM_FIGDEF-AON =
/GICOM/TBAASPDEF-AON .
/GICOM/VM_FIGDEF-SIGHT_TYPE =
/GICOM/TBAASPDEF-SIGHT_TYPE .
/GICOM/VM_FIGDEF-CLUSTER_TYPE =
/GICOM/TBAASPDEF-CLUSTER_TYPE .
/GICOM/VM_FIGDEF-CREATED_BY =
/GICOM/TBAASPDEF-CREATED_BY .
/GICOM/VM_FIGDEF-LAST_CHANGED_BY =
/GICOM/TBAASPDEF-LAST_CHANGED_BY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_FIGDEF USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_FIGDEF-GUID TO
/GICOM/TBAASPDEF-GUID .
MOVE /GICOM/VM_FIGDEF-CLNT TO
/GICOM/TBAASPDEF-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TBAASPDEF'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TBAASPDEF TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TBAASPDEF'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_FIGFIT................................*
FORM GET_DATA_/GICOM/VM_FIGFIT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TBAASPFIT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_FIGFIT .
/GICOM/VM_FIGFIT-CLNT =
/GICOM/TBAASPFIT-CLNT .
/GICOM/VM_FIGFIT-GUID =
/GICOM/TBAASPFIT-GUID .
/GICOM/VM_FIGFIT-LANGU =
/GICOM/TBAASPFIT-LANGU .
/GICOM/VM_FIGFIT-TITLE =
/GICOM/TBAASPFIT-TITLE .
/GICOM/VM_FIGFIT-CREATED_BY =
/GICOM/TBAASPFIT-CREATED_BY .
/GICOM/VM_FIGFIT-LAST_CHANGED_BY =
/GICOM/TBAASPFIT-LAST_CHANGED_BY .
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPFIT-GUID .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_FIGFIT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_FIGFIT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_FIGFIT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_FIGFIT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPFIT WHERE
  GUID = /GICOM/VM_FIGFIT-GUID AND
  LANGU = /GICOM/VM_FIGFIT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TBAASPFIT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TBAASPFIT WHERE
  GUID = /GICOM/VM_FIGFIT-GUID AND
  LANGU = /GICOM/VM_FIGFIT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TBAASPFIT.
    ENDIF.
/GICOM/TBAASPFIT-CLNT =
/GICOM/VM_FIGFIT-CLNT .
/GICOM/TBAASPFIT-GUID =
/GICOM/VM_FIGFIT-GUID .
/GICOM/TBAASPFIT-LANGU =
/GICOM/VM_FIGFIT-LANGU .
/GICOM/TBAASPFIT-TITLE =
/GICOM/VM_FIGFIT-TITLE .
/GICOM/TBAASPFIT-CREATED_BY =
/GICOM/VM_FIGFIT-CREATED_BY .
/GICOM/TBAASPFIT-LAST_CHANGED_BY =
/GICOM/VM_FIGFIT-LAST_CHANGED_BY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TBAASPFIT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TBAASPFIT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_FIGFIT-UPD_FLAG,
STATUS_/GICOM/VM_FIGFIT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_FIGFIT.
  SELECT SINGLE * FROM /GICOM/TBAASPFIT WHERE
GUID = /GICOM/VM_FIGFIT-GUID AND
LANGU = /GICOM/VM_FIGFIT-LANGU .
/GICOM/VM_FIGFIT-CLNT =
/GICOM/TBAASPFIT-CLNT .
/GICOM/VM_FIGFIT-GUID =
/GICOM/TBAASPFIT-GUID .
/GICOM/VM_FIGFIT-LANGU =
/GICOM/TBAASPFIT-LANGU .
/GICOM/VM_FIGFIT-TITLE =
/GICOM/TBAASPFIT-TITLE .
/GICOM/VM_FIGFIT-CREATED_BY =
/GICOM/TBAASPFIT-CREATED_BY .
/GICOM/VM_FIGFIT-LAST_CHANGED_BY =
/GICOM/TBAASPFIT-LAST_CHANGED_BY .
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPFIT-GUID .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_FIGFIT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_FIGFIT-GUID TO
/GICOM/TBAASPFIT-GUID .
MOVE /GICOM/VM_FIGFIT-LANGU TO
/GICOM/TBAASPFIT-LANGU .
MOVE /GICOM/VM_FIGFIT-CLNT TO
/GICOM/TBAASPFIT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TBAASPFIT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TBAASPFIT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TBAASPFIT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GICOM/VM_FIGFIT USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GICOM/TBAASPFIT-CLNT =
/GICOM/VM_FIGFIT-CLNT .
/GICOM/TBAASPFIT-GUID =
/GICOM/VM_FIGFIT-GUID .
/GICOM/TBAASPFIT-LANGU =
/GICOM/VM_FIGFIT-LANGU .
/GICOM/TBAASPFIT-TITLE =
/GICOM/VM_FIGFIT-TITLE .
/GICOM/TBAASPFIT-CREATED_BY =
/GICOM/VM_FIGFIT-CREATED_BY .
/GICOM/TBAASPFIT-LAST_CHANGED_BY =
/GICOM/VM_FIGFIT-LAST_CHANGED_BY .
    SELECT SINGLE * FROM /GICOM/TBAASPFIG WHERE
GUID = /GICOM/TBAASPFIT-GUID .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: /GICOM/VM_GRPT..................................*
FORM GET_DATA_/GICOM/VM_GRPT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TGRPT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_GRPT .
/GICOM/VM_GRPT-CLNT =
/GICOM/TGRPT-CLNT .
/GICOM/VM_GRPT-GROUPING =
/GICOM/TGRPT-GROUPING .
/GICOM/VM_GRPT-LANGU =
/GICOM/TGRPT-LANGU .
/GICOM/VM_GRPT-TITLE =
/GICOM/TGRPT-TITLE .
    SELECT SINGLE * FROM /GICOM/TGRP WHERE
GROUPING = /GICOM/TGRPT-GROUPING .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_GRPT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_GRPT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_GRPT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_GRPT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TGRPT WHERE
  GROUPING = /GICOM/VM_GRPT-GROUPING AND
  LANGU = /GICOM/VM_GRPT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TGRPT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TGRPT WHERE
  GROUPING = /GICOM/VM_GRPT-GROUPING AND
  LANGU = /GICOM/VM_GRPT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TGRPT.
    ENDIF.
/GICOM/TGRPT-CLNT =
/GICOM/VM_GRPT-CLNT .
/GICOM/TGRPT-GROUPING =
/GICOM/VM_GRPT-GROUPING .
/GICOM/TGRPT-LANGU =
/GICOM/VM_GRPT-LANGU .
/GICOM/TGRPT-TITLE =
/GICOM/VM_GRPT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TGRPT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TGRPT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_GRPT-UPD_FLAG,
STATUS_/GICOM/VM_GRPT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_GRPT.
  SELECT SINGLE * FROM /GICOM/TGRPT WHERE
GROUPING = /GICOM/VM_GRPT-GROUPING AND
LANGU = /GICOM/VM_GRPT-LANGU .
/GICOM/VM_GRPT-CLNT =
/GICOM/TGRPT-CLNT .
/GICOM/VM_GRPT-GROUPING =
/GICOM/TGRPT-GROUPING .
/GICOM/VM_GRPT-LANGU =
/GICOM/TGRPT-LANGU .
/GICOM/VM_GRPT-TITLE =
/GICOM/TGRPT-TITLE .
    SELECT SINGLE * FROM /GICOM/TGRP WHERE
GROUPING = /GICOM/TGRPT-GROUPING .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_GRPT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_GRPT-GROUPING TO
/GICOM/TGRPT-GROUPING .
MOVE /GICOM/VM_GRPT-LANGU TO
/GICOM/TGRPT-LANGU .
MOVE /GICOM/VM_GRPT-CLNT TO
/GICOM/TGRPT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TGRPT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TGRPT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TGRPT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GICOM/VM_GRPT USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GICOM/TGRPT-CLNT =
/GICOM/VM_GRPT-CLNT .
/GICOM/TGRPT-GROUPING =
/GICOM/VM_GRPT-GROUPING .
/GICOM/TGRPT-LANGU =
/GICOM/VM_GRPT-LANGU .
/GICOM/TGRPT-TITLE =
/GICOM/VM_GRPT-TITLE .
    SELECT SINGLE * FROM /GICOM/TGRP WHERE
GROUPING = /GICOM/TGRPT-GROUPING .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: /GICOM/VM_GUIDFT................................*
FORM GET_DATA_/GICOM/VM_GUIDFT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TGUIDEDFT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_GUIDFT .
/GICOM/VM_GUIDFT-CLNT =
/GICOM/TGUIDEDFT-CLNT .
/GICOM/VM_GUIDFT-GUIDE_ID =
/GICOM/TGUIDEDFT-GUIDE_ID .
/GICOM/VM_GUIDFT-LANGU =
/GICOM/TGUIDEDFT-LANGU .
/GICOM/VM_GUIDFT-TEXT =
/GICOM/TGUIDEDFT-TEXT .
<VIM_TOTAL_STRUC> = /GICOM/VM_GUIDFT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_GUIDFT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_GUIDFT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_GUIDFT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TGUIDEDFT WHERE
  GUIDE_ID = /GICOM/VM_GUIDFT-GUIDE_ID AND
  LANGU = /GICOM/VM_GUIDFT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TGUIDEDFT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TGUIDEDFT WHERE
  GUIDE_ID = /GICOM/VM_GUIDFT-GUIDE_ID AND
  LANGU = /GICOM/VM_GUIDFT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TGUIDEDFT.
    ENDIF.
/GICOM/TGUIDEDFT-CLNT =
/GICOM/VM_GUIDFT-CLNT .
/GICOM/TGUIDEDFT-GUIDE_ID =
/GICOM/VM_GUIDFT-GUIDE_ID .
/GICOM/TGUIDEDFT-LANGU =
/GICOM/VM_GUIDFT-LANGU .
/GICOM/TGUIDEDFT-TEXT =
/GICOM/VM_GUIDFT-TEXT .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TGUIDEDFT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TGUIDEDFT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_GUIDFT-UPD_FLAG,
STATUS_/GICOM/VM_GUIDFT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_GUIDFT.
  SELECT SINGLE * FROM /GICOM/TGUIDEDFT WHERE
GUIDE_ID = /GICOM/VM_GUIDFT-GUIDE_ID AND
LANGU = /GICOM/VM_GUIDFT-LANGU .
/GICOM/VM_GUIDFT-CLNT =
/GICOM/TGUIDEDFT-CLNT .
/GICOM/VM_GUIDFT-GUIDE_ID =
/GICOM/TGUIDEDFT-GUIDE_ID .
/GICOM/VM_GUIDFT-LANGU =
/GICOM/TGUIDEDFT-LANGU .
/GICOM/VM_GUIDFT-TEXT =
/GICOM/TGUIDEDFT-TEXT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_GUIDFT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_GUIDFT-GUIDE_ID TO
/GICOM/TGUIDEDFT-GUIDE_ID .
MOVE /GICOM/VM_GUIDFT-LANGU TO
/GICOM/TGUIDEDFT-LANGU .
MOVE /GICOM/VM_GUIDFT-CLNT TO
/GICOM/TGUIDEDFT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TGUIDEDFT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TGUIDEDFT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TGUIDEDFT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_MEFCNS................................*
FORM GET_DATA_/GICOM/VM_MEFCNS.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TMEF_CONS WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_MEFCNS .
/GICOM/VM_MEFCNS-CLNT =
/GICOM/TMEF_CONS-CLNT .
/GICOM/VM_MEFCNS-MESSAGE_CHANNEL =
/GICOM/TMEF_CONS-MESSAGE_CHANNEL .
/GICOM/VM_MEFCNS-MESSAGE_NAME =
/GICOM/TMEF_CONS-MESSAGE_NAME .
/GICOM/VM_MEFCNS-CLASS_NAME =
/GICOM/TMEF_CONS-CLASS_NAME .
/GICOM/VM_MEFCNS-RANK =
/GICOM/TMEF_CONS-RANK .
<VIM_TOTAL_STRUC> = /GICOM/VM_MEFCNS.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_MEFCNS .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_MEFCNS.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_MEFCNS-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TMEF_CONS WHERE
  CLASS_NAME = /GICOM/VM_MEFCNS-CLASS_NAME AND
  MESSAGE_CHANNEL = /GICOM/VM_MEFCNS-MESSAGE_CHANNEL AND
  MESSAGE_NAME = /GICOM/VM_MEFCNS-MESSAGE_NAME .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TMEF_CONS .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TMEF_CONS WHERE
  CLASS_NAME = /GICOM/VM_MEFCNS-CLASS_NAME AND
  MESSAGE_CHANNEL = /GICOM/VM_MEFCNS-MESSAGE_CHANNEL AND
  MESSAGE_NAME = /GICOM/VM_MEFCNS-MESSAGE_NAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TMEF_CONS.
    ENDIF.
/GICOM/TMEF_CONS-CLNT =
/GICOM/VM_MEFCNS-CLNT .
/GICOM/TMEF_CONS-MESSAGE_CHANNEL =
/GICOM/VM_MEFCNS-MESSAGE_CHANNEL .
/GICOM/TMEF_CONS-MESSAGE_NAME =
/GICOM/VM_MEFCNS-MESSAGE_NAME .
/GICOM/TMEF_CONS-CLASS_NAME =
/GICOM/VM_MEFCNS-CLASS_NAME .
/GICOM/TMEF_CONS-RANK =
/GICOM/VM_MEFCNS-RANK .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TMEF_CONS ##WARN_OK.
    ELSE.
    INSERT /GICOM/TMEF_CONS .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_MEFCNS-UPD_FLAG,
STATUS_/GICOM/VM_MEFCNS-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_MEFCNS.
  SELECT SINGLE * FROM /GICOM/TMEF_CONS WHERE
CLASS_NAME = /GICOM/VM_MEFCNS-CLASS_NAME AND
MESSAGE_CHANNEL = /GICOM/VM_MEFCNS-MESSAGE_CHANNEL AND
MESSAGE_NAME = /GICOM/VM_MEFCNS-MESSAGE_NAME .
/GICOM/VM_MEFCNS-CLNT =
/GICOM/TMEF_CONS-CLNT .
/GICOM/VM_MEFCNS-MESSAGE_CHANNEL =
/GICOM/TMEF_CONS-MESSAGE_CHANNEL .
/GICOM/VM_MEFCNS-MESSAGE_NAME =
/GICOM/TMEF_CONS-MESSAGE_NAME .
/GICOM/VM_MEFCNS-CLASS_NAME =
/GICOM/TMEF_CONS-CLASS_NAME .
/GICOM/VM_MEFCNS-RANK =
/GICOM/TMEF_CONS-RANK .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_MEFCNS USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_MEFCNS-CLASS_NAME TO
/GICOM/TMEF_CONS-CLASS_NAME .
MOVE /GICOM/VM_MEFCNS-MESSAGE_CHANNEL TO
/GICOM/TMEF_CONS-MESSAGE_CHANNEL .
MOVE /GICOM/VM_MEFCNS-MESSAGE_NAME TO
/GICOM/TMEF_CONS-MESSAGE_NAME .
MOVE /GICOM/VM_MEFCNS-CLNT TO
/GICOM/TMEF_CONS-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TMEF_CONS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TMEF_CONS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TMEF_CONS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_MEFREC................................*
FORM GET_DATA_/GICOM/VM_MEFREC.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TMEF_REC WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_MEFREC .
/GICOM/VM_MEFREC-CLIENT =
/GICOM/TMEF_REC-CLIENT .
/GICOM/VM_MEFREC-TASK =
/GICOM/TMEF_REC-TASK .
/GICOM/VM_MEFREC-ITERATION_NUMBER =
/GICOM/TMEF_REC-ITERATION_NUMBER .
/GICOM/VM_MEFREC-RECURRENCE_DELAY =
/GICOM/TMEF_REC-RECURRENCE_DELAY .
<VIM_TOTAL_STRUC> = /GICOM/VM_MEFREC.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_MEFREC .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_MEFREC.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_MEFREC-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TMEF_REC WHERE
  TASK = /GICOM/VM_MEFREC-TASK AND
  ITERATION_NUMBER = /GICOM/VM_MEFREC-ITERATION_NUMBER .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TMEF_REC .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TMEF_REC WHERE
  TASK = /GICOM/VM_MEFREC-TASK AND
  ITERATION_NUMBER = /GICOM/VM_MEFREC-ITERATION_NUMBER .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TMEF_REC.
    ENDIF.
/GICOM/TMEF_REC-CLIENT =
/GICOM/VM_MEFREC-CLIENT .
/GICOM/TMEF_REC-TASK =
/GICOM/VM_MEFREC-TASK .
/GICOM/TMEF_REC-ITERATION_NUMBER =
/GICOM/VM_MEFREC-ITERATION_NUMBER .
/GICOM/TMEF_REC-RECURRENCE_DELAY =
/GICOM/VM_MEFREC-RECURRENCE_DELAY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TMEF_REC ##WARN_OK.
    ELSE.
    INSERT /GICOM/TMEF_REC .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_MEFREC-UPD_FLAG,
STATUS_/GICOM/VM_MEFREC-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_MEFREC.
  SELECT SINGLE * FROM /GICOM/TMEF_REC WHERE
TASK = /GICOM/VM_MEFREC-TASK AND
ITERATION_NUMBER = /GICOM/VM_MEFREC-ITERATION_NUMBER .
/GICOM/VM_MEFREC-CLIENT =
/GICOM/TMEF_REC-CLIENT .
/GICOM/VM_MEFREC-TASK =
/GICOM/TMEF_REC-TASK .
/GICOM/VM_MEFREC-ITERATION_NUMBER =
/GICOM/TMEF_REC-ITERATION_NUMBER .
/GICOM/VM_MEFREC-RECURRENCE_DELAY =
/GICOM/TMEF_REC-RECURRENCE_DELAY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_MEFREC USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_MEFREC-TASK TO
/GICOM/TMEF_REC-TASK .
MOVE /GICOM/VM_MEFREC-ITERATION_NUMBER TO
/GICOM/TMEF_REC-ITERATION_NUMBER .
MOVE /GICOM/VM_MEFREC-CLIENT TO
/GICOM/TMEF_REC-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TMEF_REC'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TMEF_REC TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TMEF_REC'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_PARROT................................*
FORM GET_DATA_/GICOM/VM_PARROT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TPAR_ROLT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_PARROT .
/GICOM/VM_PARROT-CLNT =
/GICOM/TPAR_ROLT-CLNT .
/GICOM/VM_PARROT-ROLE =
/GICOM/TPAR_ROLT-ROLE .
/GICOM/VM_PARROT-LANGU =
/GICOM/TPAR_ROLT-LANGU .
/GICOM/VM_PARROT-TITLE =
/GICOM/TPAR_ROLT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VM_PARROT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_PARROT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_PARROT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_PARROT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TPAR_ROLT WHERE
  ROLE = /GICOM/VM_PARROT-ROLE AND
  LANGU = /GICOM/VM_PARROT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TPAR_ROLT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TPAR_ROLT WHERE
  ROLE = /GICOM/VM_PARROT-ROLE AND
  LANGU = /GICOM/VM_PARROT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TPAR_ROLT.
    ENDIF.
/GICOM/TPAR_ROLT-CLNT =
/GICOM/VM_PARROT-CLNT .
/GICOM/TPAR_ROLT-ROLE =
/GICOM/VM_PARROT-ROLE .
/GICOM/TPAR_ROLT-LANGU =
/GICOM/VM_PARROT-LANGU .
/GICOM/TPAR_ROLT-TITLE =
/GICOM/VM_PARROT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TPAR_ROLT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TPAR_ROLT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_PARROT-UPD_FLAG,
STATUS_/GICOM/VM_PARROT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_PARROT.
  SELECT SINGLE * FROM /GICOM/TPAR_ROLT WHERE
ROLE = /GICOM/VM_PARROT-ROLE AND
LANGU = /GICOM/VM_PARROT-LANGU .
/GICOM/VM_PARROT-CLNT =
/GICOM/TPAR_ROLT-CLNT .
/GICOM/VM_PARROT-ROLE =
/GICOM/TPAR_ROLT-ROLE .
/GICOM/VM_PARROT-LANGU =
/GICOM/TPAR_ROLT-LANGU .
/GICOM/VM_PARROT-TITLE =
/GICOM/TPAR_ROLT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_PARROT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_PARROT-ROLE TO
/GICOM/TPAR_ROLT-ROLE .
MOVE /GICOM/VM_PARROT-LANGU TO
/GICOM/TPAR_ROLT-LANGU .
MOVE /GICOM/VM_PARROT-CLNT TO
/GICOM/TPAR_ROLT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TPAR_ROLT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TPAR_ROLT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TPAR_ROLT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_RMDCAT................................*
FORM GET_DATA_/GICOM/VM_RMDCAT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TRMDCAT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_RMDCAT .
/GICOM/VM_RMDCAT-CLNT =
/GICOM/TRMDCAT-CLNT .
/GICOM/VM_RMDCAT-CATEGORY =
/GICOM/TRMDCAT-CATEGORY .
    SELECT SINGLE * FROM /GICOM/TRMDCATT WHERE
CATEGORY = /GICOM/TRMDCAT-CATEGORY AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_RMDCAT-TITLE =
/GICOM/TRMDCATT-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_RMDCAT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_RMDCAT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_RMDCAT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_RMDCAT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TRMDCAT WHERE
  CATEGORY = /GICOM/VM_RMDCAT-CATEGORY .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TRMDCAT .
    ENDIF.
    DELETE FROM /GICOM/TRMDCATT WHERE
    CATEGORY = /GICOM/TRMDCAT-CATEGORY .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TRMDCAT WHERE
  CATEGORY = /GICOM/VM_RMDCAT-CATEGORY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TRMDCAT.
    ENDIF.
/GICOM/TRMDCAT-CLNT =
/GICOM/VM_RMDCAT-CLNT .
/GICOM/TRMDCAT-CATEGORY =
/GICOM/VM_RMDCAT-CATEGORY .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TRMDCAT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TRMDCAT .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TRMDCATT WHERE
    CATEGORY = /GICOM/TRMDCAT-CATEGORY AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TRMDCATT.
/GICOM/TRMDCATT-CATEGORY =
/GICOM/TRMDCAT-CATEGORY .
/GICOM/TRMDCATT-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TRMDCATT-TITLE =
/GICOM/VM_RMDCAT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TRMDCATT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TRMDCATT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_RMDCAT-UPD_FLAG,
STATUS_/GICOM/VM_RMDCAT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_RMDCAT.
  SELECT SINGLE * FROM /GICOM/TRMDCAT WHERE
CATEGORY = /GICOM/VM_RMDCAT-CATEGORY .
/GICOM/VM_RMDCAT-CLNT =
/GICOM/TRMDCAT-CLNT .
/GICOM/VM_RMDCAT-CATEGORY =
/GICOM/TRMDCAT-CATEGORY .
    SELECT SINGLE * FROM /GICOM/TRMDCATT WHERE
CATEGORY = /GICOM/TRMDCAT-CATEGORY AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_RMDCAT-TITLE =
/GICOM/TRMDCATT-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VM_RMDCAT-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_RMDCAT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_RMDCAT-CATEGORY TO
/GICOM/TRMDCAT-CATEGORY .
MOVE /GICOM/VM_RMDCAT-CLNT TO
/GICOM/TRMDCAT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TRMDCAT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TRMDCAT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TRMDCAT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TRMDCAT-CATEGORY TO
/GICOM/TRMDCATT-CATEGORY .
MOVE SY-LANGU TO
/GICOM/TRMDCATT-LANGU .
MOVE /GICOM/VM_RMDCAT-CLNT TO
/GICOM/TRMDCATT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TRMDCATT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TRMDCATT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TRMDCATT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_RMDCTT................................*
FORM GET_DATA_/GICOM/VM_RMDCTT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TRMDCATT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_RMDCTT .
/GICOM/VM_RMDCTT-CLNT =
/GICOM/TRMDCATT-CLNT .
/GICOM/VM_RMDCTT-LANGU =
/GICOM/TRMDCATT-LANGU .
/GICOM/VM_RMDCTT-CATEGORY =
/GICOM/TRMDCATT-CATEGORY .
/GICOM/VM_RMDCTT-TITLE =
/GICOM/TRMDCATT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VM_RMDCTT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_RMDCTT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_RMDCTT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_RMDCTT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TRMDCATT WHERE
  LANGU = /GICOM/VM_RMDCTT-LANGU AND
  CATEGORY = /GICOM/VM_RMDCTT-CATEGORY .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TRMDCATT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TRMDCATT WHERE
  LANGU = /GICOM/VM_RMDCTT-LANGU AND
  CATEGORY = /GICOM/VM_RMDCTT-CATEGORY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TRMDCATT.
    ENDIF.
/GICOM/TRMDCATT-CLNT =
/GICOM/VM_RMDCTT-CLNT .
/GICOM/TRMDCATT-LANGU =
/GICOM/VM_RMDCTT-LANGU .
/GICOM/TRMDCATT-CATEGORY =
/GICOM/VM_RMDCTT-CATEGORY .
/GICOM/TRMDCATT-TITLE =
/GICOM/VM_RMDCTT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TRMDCATT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TRMDCATT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_RMDCTT-UPD_FLAG,
STATUS_/GICOM/VM_RMDCTT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_RMDCTT.
  SELECT SINGLE * FROM /GICOM/TRMDCATT WHERE
LANGU = /GICOM/VM_RMDCTT-LANGU AND
CATEGORY = /GICOM/VM_RMDCTT-CATEGORY .
/GICOM/VM_RMDCTT-CLNT =
/GICOM/TRMDCATT-CLNT .
/GICOM/VM_RMDCTT-LANGU =
/GICOM/TRMDCATT-LANGU .
/GICOM/VM_RMDCTT-CATEGORY =
/GICOM/TRMDCATT-CATEGORY .
/GICOM/VM_RMDCTT-TITLE =
/GICOM/TRMDCATT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_RMDCTT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_RMDCTT-LANGU TO
/GICOM/TRMDCATT-LANGU .
MOVE /GICOM/VM_RMDCTT-CATEGORY TO
/GICOM/TRMDCATT-CATEGORY .
MOVE /GICOM/VM_RMDCTT-CLNT TO
/GICOM/TRMDCATT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TRMDCATT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TRMDCATT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TRMDCATT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_WRKSTA................................*
FORM GET_DATA_/GICOM/VM_WRKSTA.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TWRK_STA WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_WRKSTA .
/GICOM/VM_WRKSTA-CLNT =
/GICOM/TWRK_STA-CLNT .
/GICOM/VM_WRKSTA-STATUS =
/GICOM/TWRK_STA-STATUS .
    SELECT SINGLE * FROM /GICOM/TWRK_STAT WHERE
STATUS = /GICOM/TWRK_STA-STATUS AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_WRKSTA-TITLE =
/GICOM/TWRK_STAT-TITLE .
    ENDIF.
<VIM_TOTAL_STRUC> = /GICOM/VM_WRKSTA.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_WRKSTA .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_WRKSTA.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_WRKSTA-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TWRK_STA WHERE
  STATUS = /GICOM/VM_WRKSTA-STATUS .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TWRK_STA .
    ENDIF.
    DELETE FROM /GICOM/TWRK_STAT WHERE
    STATUS = /GICOM/TWRK_STA-STATUS .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TWRK_STA WHERE
  STATUS = /GICOM/VM_WRKSTA-STATUS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TWRK_STA.
    ENDIF.
/GICOM/TWRK_STA-CLNT =
/GICOM/VM_WRKSTA-CLNT .
/GICOM/TWRK_STA-STATUS =
/GICOM/VM_WRKSTA-STATUS .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TWRK_STA ##WARN_OK.
    ELSE.
    INSERT /GICOM/TWRK_STA .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GICOM/TWRK_STAT WHERE
    STATUS = /GICOM/TWRK_STA-STATUS AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GICOM/TWRK_STAT.
/GICOM/TWRK_STAT-STATUS =
/GICOM/TWRK_STA-STATUS .
/GICOM/TWRK_STAT-LANGU =
SY-LANGU .
      ENDIF.
/GICOM/TWRK_STAT-TITLE =
/GICOM/VM_WRKSTA-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TWRK_STAT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TWRK_STAT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_WRKSTA-UPD_FLAG,
STATUS_/GICOM/VM_WRKSTA-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_WRKSTA.
  SELECT SINGLE * FROM /GICOM/TWRK_STA WHERE
STATUS = /GICOM/VM_WRKSTA-STATUS .
/GICOM/VM_WRKSTA-CLNT =
/GICOM/TWRK_STA-CLNT .
/GICOM/VM_WRKSTA-STATUS =
/GICOM/TWRK_STA-STATUS .
    SELECT SINGLE * FROM /GICOM/TWRK_STAT WHERE
STATUS = /GICOM/TWRK_STA-STATUS AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GICOM/VM_WRKSTA-TITLE =
/GICOM/TWRK_STAT-TITLE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GICOM/VM_WRKSTA-TITLE .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_WRKSTA USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_WRKSTA-STATUS TO
/GICOM/TWRK_STA-STATUS .
MOVE /GICOM/VM_WRKSTA-CLNT TO
/GICOM/TWRK_STA-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TWRK_STA'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TWRK_STA TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TWRK_STA'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GICOM/TWRK_STA-STATUS TO
/GICOM/TWRK_STAT-STATUS .
MOVE SY-LANGU TO
/GICOM/TWRK_STAT-LANGU .
MOVE /GICOM/VM_WRKSTA-CLNT TO
/GICOM/TWRK_STAT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TWRK_STAT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TWRK_STAT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TWRK_STAT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GICOM/VM_WRKSTT................................*
FORM GET_DATA_/GICOM/VM_WRKSTT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GICOM/TWRK_STAT WHERE
(VIM_WHERETAB) .
    CLEAR /GICOM/VM_WRKSTT .
/GICOM/VM_WRKSTT-CLNT =
/GICOM/TWRK_STAT-CLNT .
/GICOM/VM_WRKSTT-STATUS =
/GICOM/TWRK_STAT-STATUS .
/GICOM/VM_WRKSTT-LANGU =
/GICOM/TWRK_STAT-LANGU .
/GICOM/VM_WRKSTT-TITLE =
/GICOM/TWRK_STAT-TITLE .
<VIM_TOTAL_STRUC> = /GICOM/VM_WRKSTT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GICOM/VM_WRKSTT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GICOM/VM_WRKSTT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GICOM/VM_WRKSTT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TWRK_STAT WHERE
  STATUS = /GICOM/VM_WRKSTT-STATUS AND
  LANGU = /GICOM/VM_WRKSTT-LANGU .
    IF SY-SUBRC = 0.
    DELETE /GICOM/TWRK_STAT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GICOM/TWRK_STAT WHERE
  STATUS = /GICOM/VM_WRKSTT-STATUS AND
  LANGU = /GICOM/VM_WRKSTT-LANGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GICOM/TWRK_STAT.
    ENDIF.
/GICOM/TWRK_STAT-CLNT =
/GICOM/VM_WRKSTT-CLNT .
/GICOM/TWRK_STAT-STATUS =
/GICOM/VM_WRKSTT-STATUS .
/GICOM/TWRK_STAT-LANGU =
/GICOM/VM_WRKSTT-LANGU .
/GICOM/TWRK_STAT-TITLE =
/GICOM/VM_WRKSTT-TITLE .
    IF SY-SUBRC = 0.
    UPDATE /GICOM/TWRK_STAT ##WARN_OK.
    ELSE.
    INSERT /GICOM/TWRK_STAT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GICOM/VM_WRKSTT-UPD_FLAG,
STATUS_/GICOM/VM_WRKSTT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GICOM/VM_WRKSTT.
  SELECT SINGLE * FROM /GICOM/TWRK_STAT WHERE
STATUS = /GICOM/VM_WRKSTT-STATUS AND
LANGU = /GICOM/VM_WRKSTT-LANGU .
/GICOM/VM_WRKSTT-CLNT =
/GICOM/TWRK_STAT-CLNT .
/GICOM/VM_WRKSTT-STATUS =
/GICOM/TWRK_STAT-STATUS .
/GICOM/VM_WRKSTT-LANGU =
/GICOM/TWRK_STAT-LANGU .
/GICOM/VM_WRKSTT-TITLE =
/GICOM/TWRK_STAT-TITLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GICOM/VM_WRKSTT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GICOM/VM_WRKSTT-STATUS TO
/GICOM/TWRK_STAT-STATUS .
MOVE /GICOM/VM_WRKSTT-LANGU TO
/GICOM/TWRK_STAT-LANGU .
MOVE /GICOM/VM_WRKSTT-CLNT TO
/GICOM/TWRK_STAT-CLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GICOM/TWRK_STAT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GICOM/TWRK_STAT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GICOM/TWRK_STAT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
